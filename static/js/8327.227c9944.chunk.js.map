{"version":3,"file":"static/js/8327.227c9944.chunk.js","mappings":"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","sources":["pages/ClientServiceConsent.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { motion } from 'framer-motion';\r\nimport {\r\n  FaUser, FaUserTie, FaIdCard, FaEnvelope, FaCalendarAlt,\r\n  FaAddressCard, FaRegAddressCard, FaArrowRight, FaUpload, FaFilePdf, FaFileImage, FaTimesCircle\r\n} from 'react-icons/fa';\r\nimport { ref, push, set } from 'firebase/database';\r\nimport { ref as storageRef, uploadBytes, getDownloadURL } from 'firebase/storage'; // Added for Storage\r\nimport { toast } from 'react-toastify';\r\nimport { db, storage } from '../firebase'; // Import storage\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Animation variants for container and items\r\nconst containerVariants = {\r\n  hidden: { opacity: 0, y: 50 },\r\n  visible: {\r\n    opacity: 1,\r\n    y: 0,\r\n    transition: {\r\n      staggerChildren: 0.1,\r\n      delayChildren: 0.2,\r\n      duration: 0.7,\r\n      ease: 'easeOut',\r\n    },\r\n  },\r\n};\r\n\r\nconst itemVariants = {\r\n  hidden: { opacity: 0, y: 20 },\r\n  visible: { opacity: 1, y: 0, transition: { duration: 0.5 } },\r\n};\r\n\r\nconst ClientServiceConsent = () => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm();\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [panFile, setPanFile] = useState(null);\r\n  const [aadhaarFile, setAadhaarFile] = useState(null);\r\n  const [signatureFile, setSignatureFile] = useState(null);\r\n\r\n  // Handle file upload to Firebase Storage and get download URL\r\n  const uploadFileToStorage = async (file, path) => {\r\n    if (!file) return null;\r\n    const fileRef = storageRef(storage, path);\r\n    await uploadBytes(fileRef, file);\r\n    return await getDownloadURL(fileRef);\r\n  };\r\n\r\n  // Handle form submission\r\n  const onSubmit = async (data) => {\r\n    setIsSubmitting(true);\r\n    try {\r\n      // Upload files to Firebase Storage\r\n      const timestamp = Date.now();\r\n      const [panUrl, aadhaarUrl, signatureUrl] = await Promise.all([\r\n        uploadFileToStorage(panFile, `clientServiceConsent/pan/${timestamp}_${panFile?.name || 'pan'}`),\r\n        uploadFileToStorage(aadhaarFile, `clientServiceConsent/aadhaar/${timestamp}_${aadhaarFile?.name || 'aadhaar'}`),\r\n        uploadFileToStorage(signatureFile, `clientServiceConsent/signature/${timestamp}_${signatureFile?.name || 'signature'}`),\r\n      ]);\r\n\r\n      // Prepare submission payload\r\n      const submissionData = {\r\n        ...data,\r\n        panUrl: panUrl || null,\r\n        aadhaarUrl: aadhaarUrl || null,\r\n        signatureUrl: signatureUrl || null,\r\n        timestamp,\r\n      };\r\n\r\n      // Save to Firebase Realtime Database\r\n      const newRef = push(ref(db, 'clientServiceConsentForms'));\r\n      await set(newRef, submissionData);\r\n\r\n      toast.success('Form submitted successfully!');\r\n      reset();\r\n      setPanFile(null);\r\n      setAadhaarFile(null);\r\n      setSignatureFile(null);\r\n    } catch (err) {\r\n      console.error('Submission error:', err);\r\n      toast.error('Submission failed: ' + err.message);\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  // Render input field with icon\r\n  const renderInput = (id, label, icon, type = 'text', validation, note) => (\r\n    <motion.div variants={itemVariants} className=\"w-full\">\r\n      <label htmlFor={id} className=\"block text-sm font-medium text-white mb-2\">\r\n        {label}\r\n      </label>\r\n      <div className=\"relative\">\r\n        <span className=\"absolute inset-y-0 left-0 flex items-center pl-3 text-white/70 text-xl\">\r\n          {icon}\r\n        </span>\r\n        <input\r\n          id={id}\r\n          type={type}\r\n          {...register(id, validation)}\r\n          placeholder={`Enter your ${label.replace('*', '').toLowerCase()}`}\r\n          className={`w-full pl-11 pr-4 py-3 rounded-lg border custom-box-bg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all duration-300 ${\r\n            errors[id] ? 'border-red-500 ring-red-500/50' : 'border-gray-300/50'\r\n          }`}\r\n        />\r\n      </div>\r\n      {note && <p className=\"text-xs text-gray-400 mt-1\">{note}</p>}\r\n      {errors[id] && (\r\n        <p className=\"text-red-400 text-xs mt-1\">{errors[id].message}</p>\r\n      )}\r\n    </motion.div>\r\n  );\r\n\r\n  // Render file input with preview and remove option\r\n  const renderFileInput = (id, label, icon, setFile, file, accept) => (\r\n    <motion.div variants={itemVariants} className=\"w-full\">\r\n      <label htmlFor={id} className=\"block text-sm font-medium text-white mb-2\">\r\n        {label}\r\n      </label>\r\n      <div\r\n        className={`relative border-2 border-dashed rounded-lg p-4 text-center transition-all duration-300 ${\r\n          errors[id] ? 'border-red-500' : 'border-gray-300/50 hover:border-blue-500'\r\n        } ${isSubmitting ? 'opacity-50' : ''}`}\r\n      >\r\n        <input\r\n          id={id}\r\n          type=\"file\"\r\n          accept={accept}\r\n          className=\"absolute inset-0 w-full h-full opacity-0 cursor-pointer\"\r\n          {...register(id, {\r\n            validate: {\r\n              fileSize: (fileList) =>\r\n                !fileList?.[0] ||\r\n                fileList[0].size <= 5000000 ||\r\n                'File size must be less than 5MB',\r\n              fileType: (fileList) => {\r\n                if (!fileList?.[0]) return true;\r\n                const validTypes = accept.split(',').map((type) => type.trim());\r\n                return (\r\n                  validTypes.some((type) => fileList[0].type.includes(type)) ||\r\n                  'Invalid file type. Accepted: PDF, JPG, PNG'\r\n                );\r\n              },\r\n            },\r\n          })}\r\n          onChange={(e) => {\r\n            if (e.target.files && e.target.files[0]) {\r\n              setFile(e.target.files[0]);\r\n            }\r\n          }}\r\n          disabled={isSubmitting}\r\n        />\r\n        {!file ? (\r\n          <div className=\"flex flex-col items-center justify-center text-white/70\">\r\n            {icon}\r\n            <p className=\"mt-2 text-sm\">Click or drag file to upload</p>\r\n            <p className=\"text-xs text-gray-400 mt-1\">PDF, JPG, PNG (Max 5MB)</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"flex items-center justify-between text-white\">\r\n            <div className=\"flex items-center gap-3 flex-1 min-w-0\">\r\n              {file.type.includes('pdf') ? (\r\n                <FaFilePdf className=\"text-red-400 text-2xl\" />\r\n              ) : (\r\n                <FaFileImage className=\"text-blue-400 text-2xl\" />\r\n              )}\r\n              <span className=\"text-sm font-medium truncate overflow-hidden\">\r\n                {file.name}\r\n              </span>\r\n            </div>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => setFile(null)}\r\n              className=\"text-red-500 hover:text-red-400 transition-colors ml-2 flex-shrink-0\"\r\n              aria-label=\"Remove file\"\r\n              disabled={isSubmitting}\r\n            >\r\n              <FaTimesCircle size={20} />\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {errors[id] && (\r\n        <p className=\"text-red-400 text-xs mt-1\">{errors[id].message}</p>\r\n      )}\r\n    </motion.div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"py-12\">\r\n      <motion.div\r\n        className=\"max-w-4xl mx-auto\"\r\n        initial=\"hidden\"\r\n        animate=\"visible\"\r\n        variants={containerVariants}\r\n      >\r\n        <motion.div className=\"text-sm mb-8\" variants={itemVariants}>\r\n          <Link to=\"/\" className=\"hover:text-blue-400\">\r\n            Home\r\n          </Link>\r\n          <span className=\"mx-2\">/</span>\r\n          <span className=\"text-blue-400\">Client Service Consent</span>\r\n        </motion.div>\r\n\r\n        <motion.div\r\n          className=\"bg-white/10 backdrop-blur-md p-8 rounded-2xl shadow-xl border border-white/20\"\r\n          variants={itemVariants}\r\n        >\r\n          <div className=\"text-center mb-8\">\r\n            <h2 className=\"text-3xl font-extrabold bg-clip-text text-transparent bg-gradient-to-r from-blue-400 to-purple-400\">\r\n              Client Service Consent\r\n            </h2>\r\n            <p className=\"mt-2 text-gray-300\">\r\n              Please fill out the form below and upload required documents.\r\n            </p>\r\n          </div>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-6\">\r\n            <motion.div\r\n              variants={containerVariants}\r\n              className=\"p-6 rounded-lg bg-white/5 border border-white/10\"\r\n            >\r\n              <h3 className=\"text-xl font-semibold text-white border-b border-white/20 pb-2 mb-6\">\r\n                Client Information\r\n              </h3>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                {renderInput(\r\n                  'clientName',\r\n                  'Client Name*',\r\n                  <FaUser />,\r\n                  'text',\r\n                  {\r\n                    required: 'Client name is required',\r\n                    minLength: {\r\n                      value: 2,\r\n                      message: 'Client name must be at least 2 characters',\r\n                    },\r\n                  }\r\n                )}\r\n                {renderInput(\r\n                  'fatherName',\r\n                  \"Father's Name*\",\r\n                  <FaUserTie />,\r\n                  'text',\r\n                  {\r\n                    required: \"Father's name is required\",\r\n                    minLength: {\r\n                      value: 2,\r\n                      message: \"Father's name must be at least 2 characters\",\r\n                    },\r\n                  }\r\n                )}\r\n                {renderInput(\r\n                  'clientId',\r\n                  'Client ID*',\r\n                  <FaIdCard />,\r\n                  'text',\r\n                  {\r\n                    required: 'Client ID is required',\r\n                    pattern: {\r\n                      value: /^[A-Za-z0-9]{4,}$/,\r\n                      message: 'Client ID must be alphanumeric and at least 4 characters',\r\n                    },\r\n                  },\r\n                  'Ask your representative for the client ID.'\r\n                )}\r\n                {renderInput(\r\n                  'email',\r\n                  'Email ID*',\r\n                  <FaEnvelope />,\r\n                  'email',\r\n                  {\r\n                    required: 'Email is required',\r\n                    pattern: {\r\n                      value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                      message: 'Invalid email address',\r\n                    },\r\n                  }\r\n                )}\r\n                {renderInput(\r\n                  'dob',\r\n                  'Date Of Birth*',\r\n                  <FaCalendarAlt />,\r\n                  'date',\r\n                  {\r\n                    required: 'Date of birth is required',\r\n                    validate: {\r\n                      pastDate: (value) => {\r\n                        const today = new Date();\r\n                        const inputDate = new Date(value);\r\n                        return inputDate < today || 'Date of birth must be in the past';\r\n                      },\r\n                    },\r\n                  }\r\n                )}\r\n                {renderInput(\r\n                  'pan',\r\n                  'PAN*',\r\n                  <FaAddressCard />,\r\n                  'text',\r\n                  {\r\n                    required: 'PAN is required',\r\n                    pattern: {\r\n                      value: /[A-Z]{5}[0-9]{4}[A-Z]{1}/,\r\n                      message: 'Invalid PAN format',\r\n                    },\r\n                    minLength: { value: 10, message: 'PAN must be 10 characters' },\r\n                    maxLength: { value: 10, message: 'PAN must be 10 characters' },\r\n                  }\r\n                )}\r\n                {renderInput(\r\n                  'aadhaar',\r\n                  'Aadhaar*',\r\n                  <FaRegAddressCard />,\r\n                  'text',\r\n                  {\r\n                    required: 'Aadhaar is required',\r\n                    pattern: {\r\n                      value: /^[2-9]{1}[0-9]{3}[0-9]{4}[0-9]{4}$/,\r\n                      message: 'Invalid Aadhaar format',\r\n                    },\r\n                    minLength: { value: 12, message: 'Aadhaar must be 12 digits' },\r\n                    maxLength: { value: 12, message: 'Aadhaar must be 12 digits' },\r\n                  }\r\n                )}\r\n              </div>\r\n            </motion.div>\r\n\r\n            <motion.div\r\n              variants={containerVariants}\r\n              className=\"p-6 rounded-lg bg-white/5 border border-white/10\"\r\n            >\r\n              <h3 className=\"text-xl font-semibold text-white border-b border-white/20 pb-2 mb-6\">\r\n                Document Uploads\r\n              </h3>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n                {renderFileInput(\r\n                  'panFile',\r\n                  'PAN Card Upload',\r\n                  <FaUpload size={24} />,\r\n                  setPanFile,\r\n                  panFile,\r\n                  'image/jpeg,image/png,application/pdf'\r\n                )}\r\n                {renderFileInput(\r\n                  'aadhaarFile',\r\n                  'Aadhaar Card Upload',\r\n                  <FaUpload size={24} />,\r\n                  setAadhaarFile,\r\n                  aadhaarFile,\r\n                  'image/jpeg,image/png,application/pdf'\r\n                )}\r\n                {renderFileInput(\r\n                  'signatureFile',\r\n                  'Signature Upload',\r\n                  <FaUpload size={24} />,\r\n                  setSignatureFile,\r\n                  signatureFile,\r\n                  'image/jpeg,image/png,application/pdf'\r\n                )}\r\n              </div>\r\n\r\n              <motion.div variants={itemVariants}>\r\n                <label\r\n                  htmlFor=\"address\"\r\n                  className=\"block text-sm font-medium text-white mb-2\"\r\n                >\r\n                  Address*\r\n                </label>\r\n                <textarea\r\n                  id=\"address\"\r\n                  {...register('address', {\r\n                    required: 'Address is required',\r\n                    minLength: {\r\n                      value: 10,\r\n                      message: 'Address must be at least 10 characters',\r\n                    },\r\n                  })}\r\n                  rows=\"4\"\r\n                  placeholder=\"Enter Full Address\"\r\n                  className={`w-full px-4 py-3 rounded-lg border custom-box-bg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all duration-300 ${\r\n                    errors.address ? 'border-red-500' : 'border-gray-300/50'\r\n                  }`}\r\n                ></textarea>\r\n                {errors.address && (\r\n                  <p className=\"text-red-400 text-xs mt-1\">\r\n                    {errors.address.message}\r\n                  </p>\r\n                )}\r\n              </motion.div>\r\n            </motion.div>\r\n\r\n            <motion.div variants={itemVariants}>\r\n              <motion.button\r\n                type=\"submit\"\r\n                disabled={isSubmitting}\r\n                className=\"w-full shine-hover py-3 px-4 bg-gradient-to-r from-blue-500 to-purple-500 text-white font-bold rounded-lg shadow-lg disabled:opacity-50 disabled:cursor-not-allowed transform transition-all duration-300\"\r\n                whileHover={{ scale: isSubmitting ? 1 : 1.02 }}\r\n                whileTap={{ scale: isSubmitting ? 1 : 0.98 }}\r\n              >\r\n                {isSubmitting ? 'Submitting...' : 'Submit'}\r\n                {!isSubmitting && <FaArrowRight className=\"inline ml-2\" />}\r\n              </motion.button>\r\n            </motion.div>\r\n          </form>\r\n        </motion.div>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientServiceConsent;"],"names":["containerVariants","hidden","opacity","y","visible","transition","staggerChildren","delayChildren","duration","ease","itemVariants","ClientServiceConsent","register","handleSubmit","formState","errors","reset","useForm","isSubmitting","setIsSubmitting","useState","panFile","setPanFile","aadhaarFile","setAadhaarFile","signatureFile","setSignatureFile","uploadFileToStorage","async","file","path","fileRef","storageRef","storage","uploadBytes","getDownloadURL","renderInput","id","label","icon","type","arguments","length","undefined","validation","note","_jsxs","motion","div","variants","className","children","_jsx","htmlFor","placeholder","replace","toLowerCase","message","renderFileInput","setFile","accept","validate","fileSize","fileList","size","fileType","split","map","trim","some","includes","onChange","e","target","files","disabled","FaFilePdf","FaFileImage","name","onClick","FaTimesCircle","initial","animate","Link","to","onSubmit","timestamp","Date","now","panUrl","aadhaarUrl","signatureUrl","Promise","all","submissionData","data","newRef","push","ref","db","set","toast","success","err","console","error","FaUser","required","minLength","value","FaUserTie","FaIdCard","pattern","FaEnvelope","FaCalendarAlt","pastDate","today","FaAddressCard","maxLength","FaRegAddressCard","FaUpload","rows","address","button","whileHover","scale","whileTap","FaArrowRight"],"sourceRoot":""}