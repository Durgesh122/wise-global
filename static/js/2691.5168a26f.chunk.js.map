{"version":3,"file":"static/js/2691.5168a26f.chunk.js","mappings":"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","sources":["pages/ClientServiceConsert.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { motion } from 'framer-motion';\r\nimport {\r\n  FaUser, FaUserTie, FaIdCard, FaEnvelope, FaCalendarAlt,\r\n  FaAddressCard, FaRegAddressCard, FaArrowRight, FaUpload\r\n} from 'react-icons/fa';\r\nimport { ref, push } from 'firebase/database'; // Removed storage imports\r\nimport { toast } from 'react-toastify';\r\nimport { db } from '../firebase';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Helper function to convert file to Base64\r\nconst fileToBase64 = (file) =>\r\n  new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = (error) => reject(error);\r\n  });\r\n\r\nconst containerVariants = {\r\n  hidden: { opacity: 0, y: 50 },\r\n  visible: {\r\n    opacity: 1,\r\n    y: 0,\r\n    transition: {\r\n      staggerChildren: 0.1,\r\n      delayChildren: 0.2,\r\n      duration: 0.7,\r\n      ease: 'easeOut',\r\n    },\r\n  },\r\n};\r\n\r\nconst itemVariants = {\r\n  hidden: { opacity: 0, y: 20 },\r\n  visible: { opacity: 1, y: 0, transition: { duration: 0.5 } },\r\n};\r\n\r\nconst ClientServiceConsent = () => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm();\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [panFile, setPanFile] = useState(null);\r\n  const [aadhaarFile, setAadhaarFile] = useState(null);\r\n  const [signatureFile, setSignatureFile] = useState(null);\r\n\r\n  const onSubmit = async (data) => {\r\n    setIsSubmitting(true);\r\n    try {\r\n      // Convert files to Base64 strings\r\n      const panDataUrl = panFile ? await fileToBase64(panFile) : '';\r\n      const aadhaarDataUrl = aadhaarFile ? await fileToBase64(aadhaarFile) : '';\r\n      const signatureDataUrl = signatureFile ? await fileToBase64(signatureFile) : '';\r\n\r\n      const submissionData = {\r\n        ...data,\r\n        panDataUrl,\r\n        aadhaarDataUrl,\r\n        signatureDataUrl,\r\n        timestamp: new Date().toISOString(),\r\n      };\r\n\r\n      await push(ref(db, 'clientServiceConsentForms'), submissionData);\r\n      toast.success('Consent form submitted successfully!', {\r\n        position: 'top-center',\r\n      });\r\n      reset();\r\n      setPanFile(null);\r\n      setAadhaarFile(null);\r\n      setSignatureFile(null);\r\n    } catch (error) {\r\n      console.error('Error submitting form:', error);\r\n      toast.error(`Failed to submit form: ${error.message}`, {\r\n        position: 'top-center',\r\n      });\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const renderInput = (id, label, icon, type = 'text', validation, note) => (\r\n    <motion.div variants={itemVariants}>\r\n      <label htmlFor={id} className=\"block text-sm font-medium text-white mb-2\">\r\n        {label}\r\n      </label>\r\n      <div className=\"relative\">\r\n        <span className=\"absolute inset-y-0 left-0 flex items-center pl-3 text-white text-xl\">\r\n          {icon}\r\n        </span>\r\n        <input\r\n          id={id}\r\n          type={type}\r\n          {...register(id, validation)}\r\n          placeholder={`Enter ${label.replace('*', '')}`}\r\n          className={`w-full pl-10 pr-4 py-3 rounded-lg border custom-box-bg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 ${\r\n            errors[id] ? 'border-red-500' : 'border-gray-300/50'\r\n          }`}\r\n        />\r\n      </div>\r\n      {note && <p className=\"text-xs text-gray-400 mt-1\">{note}</p>}\r\n      {errors[id] && (\r\n        <p className=\"text-red-400 text-xs mt-1\">{errors[id].message}</p>\r\n      )}\r\n    </motion.div>\r\n  );\r\n\r\n  const renderFileInput = (id, label, icon, setFile, accept) => (\r\n    <motion.div variants={itemVariants}>\r\n      <label htmlFor={id} className=\"block text-sm font-medium text-white mb-2\">\r\n        {label}\r\n      </label>\r\n      <div className=\"relative\">\r\n        <span className=\"absolute inset-y-0 left-0 flex items-center pl-3 text-white text-xl\">\r\n          {icon}\r\n        </span>\r\n        <input\r\n          id={id}\r\n          type=\"file\"\r\n          accept={accept}\r\n          {...register(id, {\r\n            required: `${label.replace('*', '')} is required`,\r\n            validate: {\r\n              fileSize: (fileList) => fileList[0]?.size <= 5000000 || 'File size must be less than 5MB',\r\n              fileType: (fileList) => {\r\n                if (!fileList[0]) return 'No file selected';\r\n                const validTypes = accept.split(',');\r\n                return validTypes.some(type => fileList[0].type.includes(type.trim())) || 'Invalid file type';\r\n              }\r\n            }\r\n          })}\r\n          onChange={(e) => {\r\n            if (e.target.files[0]) {\r\n              setFile(e.target.files[0]);\r\n            }\r\n          }}\r\n          className={`w-full pl-10 pr-4 py-3 rounded-lg border bg-gradient-to-r from-gray-800 to-gray-900 text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-all duration-300 hover:shadow-lg hover:shadow-blue-500/50 ${\r\n            errors[id] ? 'border-red-500' : 'border-blue-500/50'\r\n          }`}\r\n        />\r\n      </div>\r\n      <p className=\"text-xs text-gray-400 mt-1\">Accepted formats: PDF, JPG, PNG (Max 5MB)</p>\r\n      {errors[id] && (\r\n        <p className=\"text-red-400 text-xs mt-1\">{errors[id].message}</p>\r\n      )}\r\n    </motion.div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"min-h-screen py-12 px-4 sm:px-6 lg:px-8 text-white\">\r\n      <motion.div\r\n        className=\"max-w-4xl mx-auto\"\r\n        initial=\"hidden\"\r\n        animate=\"visible\"\r\n        variants={containerVariants}\r\n      >\r\n        <motion.div className=\"text-sm mb-8\" variants={itemVariants}>\r\n          <Link to=\"/\" className=\"hover:text-blue-400\">Home</Link>\r\n          <span className=\"mx-2\">/</span>\r\n          <span className=\"text-blue-400\">Client Service Consent Form</span>\r\n        </motion.div>\r\n\r\n        <motion.div\r\n          className=\"bg-white/10 backdrop-blur-md p-8 rounded-2xl shadow-xl border border-white/20\"\r\n          variants={itemVariants}\r\n        >\r\n          <div className=\"text-center mb-8\">\r\n            <h2 className=\"text-3xl font-extrabold bg-clip-text text-transparent bg-gradient-to-r from-blue-400 to-purple-400\">\r\n              Client Service Consent Form\r\n            </h2>\r\n            <p className=\"mt-2 text-gray-300\">\r\n              Please fill out the form below and upload required documents.\r\n            </p>\r\n          </div>\r\n\r\n          <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-6\">\r\n            <h3 className=\"text-xl font-semibold text-white border-b border-white/20 pb-2 mb-6\">\r\n              Client Information\r\n            </h3>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              {renderInput(\r\n                'clientName',\r\n                'Client Name*',\r\n                <FaUser />,\r\n                'text',\r\n                { \r\n                  required: 'Client name is required',\r\n                  minLength: { value: 2, message: 'Client name must be at least 2 characters' }\r\n                }\r\n              )}\r\n              {renderInput(\r\n                'fatherName',\r\n                \"Father's Name*\",\r\n                <FaUserTie />,\r\n                'text',\r\n                { \r\n                  required: \"Father's name is required\",\r\n                  minLength: { value: 2, message: \"Father's name must be at least 2 characters\" }\r\n                }\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              {renderInput(\r\n                'clientId',\r\n                'Client ID*',\r\n                <FaIdCard />,\r\n                'text',\r\n                { \r\n                  required: 'Client ID is required',\r\n                  pattern: {\r\n                    value: /^[A-Za-z0-9]{4,}$/,\r\n                    message: 'Client ID must be alphanumeric and at least 4 characters'\r\n                  }\r\n                },\r\n                'Ask your representative for the client ID.'\r\n              )}\r\n              {renderInput(\r\n                'email',\r\n                'Email ID*',\r\n                <FaEnvelope />,\r\n                'email',\r\n                {\r\n                  required: 'Email is required',\r\n                  pattern: {\r\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n                    message: 'Invalid email address',\r\n                  },\r\n                }\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              {renderInput(\r\n                'dob',\r\n                'Date Of Birth*',\r\n                <FaCalendarAlt />,\r\n                'date',\r\n                { \r\n                  required: 'Date of birth is required',\r\n                  validate: {\r\n                    pastDate: (value) => {\r\n                      const today = new Date();\r\n                      const inputDate = new Date(value);\r\n                      return inputDate < today || 'Date of birth must be in the past';\r\n                    }\r\n                  }\r\n                }\r\n              )}\r\n              {renderInput(\r\n                'pan',\r\n                'PAN*',\r\n                <FaAddressCard />,\r\n                'text',\r\n                {\r\n                  required: 'PAN is required',\r\n                  pattern: {\r\n                    value: /[A-Z]{5}[0-9]{4}[A-Z]{1}/,\r\n                    message: 'Invalid PAN format',\r\n                  },\r\n                  minLength: { value: 10, message: 'PAN must be 10 characters' },\r\n                  maxLength: { value: 10, message: 'PAN must be 10 characters' },\r\n                }\r\n              )}\r\n            </div>\r\n\r\n            {renderInput(\r\n              'aadhaar',\r\n              'Aadhaar*',\r\n              <FaRegAddressCard />,\r\n              'text',\r\n              {\r\n                required: 'Aadhaar is required',\r\n                pattern: {\r\n                  value: /^[2-9]{1}[0-9]{3}[0-9]{4}[0-9]{4}$/,\r\n                  message: 'Invalid Aadhaar format',\r\n                },\r\n                minLength: { value: 12, message: 'Aadhaar must be 12 digits' },\r\n                maxLength: { value: 12, message: 'Aadhaar must be 12 digits' },\r\n              }\r\n            )}\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n              {renderFileInput(\r\n                'panFile',\r\n                'PAN Card Upload*',\r\n                <FaUpload />,\r\n                setPanFile,\r\n                'image/jpeg,image/png,application/pdf'\r\n              )}\r\n              {renderFileInput(\r\n                'aadhaarFile',\r\n                'Aadhaar Card Upload*',\r\n                <FaUpload />,\r\n                setAadhaarFile,\r\n                'image/jpeg,image/png,application/pdf'\r\n              )}\r\n              {renderFileInput(\r\n                'signatureFile',\r\n                'Signature Upload*',\r\n                <FaUpload />,\r\n                setSignatureFile,\r\n                'image/jpeg,image/png,application/pdf'\r\n              )}\r\n            </div>\r\n\r\n            <motion.div variants={itemVariants}>\r\n              <label htmlFor=\"address\" className=\"block text-sm font-medium text-white mb-2\">\r\n                Address*\r\n              </label>\r\n              <textarea\r\n                id=\"address\"\r\n                {...register('address', { \r\n                  required: 'Address is required',\r\n                  minLength: { value: 10, message: 'Address must be at least 10 characters' }\r\n                })}\r\n                rows=\"4\"\r\n                placeholder=\"Enter Full Address\"\r\n                className={`w-full px-4 py-3 rounded-lg border custom-box-bg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 ${\r\n                  errors.address ? 'border-red-500' : 'border-gray-300/50'\r\n                }`}\r\n              ></textarea>\r\n              {errors.address && (\r\n                <p className=\"text-red-400 text-xs mt-1\">\r\n                  {errors.address.message}\r\n                </p>\r\n              )}\r\n            </motion.div>\r\n\r\n            <motion.div variants={itemVariants}>\r\n              <motion.button\r\n                type=\"submit\"\r\n                disabled={isSubmitting}\r\n                className=\"w-full shine-hover py-3 px-4 bg-gradient-to-r from-blue-500 to-purple-500 text-white font-bold rounded-lg shadow-md disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                whileHover={{ scale: isSubmitting ? 1 : 1.02 }}\r\n                whileTap={{ scale: isSubmitting ? 1 : 0.98 }}\r\n              >\r\n                {isSubmitting ? 'Submitting...' : 'Submit'}\r\n                {!isSubmitting && <FaArrowRight className=\"inline ml-2\" />}\r\n              </motion.button>\r\n            </motion.div>\r\n          </form>\r\n        </motion.div>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClientServiceConsent;"],"names":["fileToBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","containerVariants","hidden","opacity","y","visible","transition","staggerChildren","delayChildren","duration","ease","itemVariants","ClientServiceConsent","register","handleSubmit","formState","errors","reset","useForm","isSubmitting","setIsSubmitting","useState","panFile","setPanFile","aadhaarFile","setAadhaarFile","signatureFile","setSignatureFile","renderInput","id","label","icon","type","arguments","length","undefined","validation","note","_jsxs","motion","div","variants","children","_jsx","htmlFor","className","placeholder","replace","message","renderFileInput","setFile","accept","required","validate","fileSize","fileList","_fileList$","size","fileType","split","some","includes","trim","onChange","e","target","files","initial","animate","Link","to","onSubmit","async","panDataUrl","aadhaarDataUrl","signatureDataUrl","submissionData","data","timestamp","Date","toISOString","push","ref","db","toast","success","position","console","FaUser","minLength","value","FaUserTie","FaIdCard","pattern","FaEnvelope","FaCalendarAlt","pastDate","today","FaAddressCard","maxLength","FaRegAddressCard","FaUpload","rows","address","button","disabled","whileHover","scale","whileTap","FaArrowRight"],"sourceRoot":""}