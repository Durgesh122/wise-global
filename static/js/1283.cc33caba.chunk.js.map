{"version":3,"file":"static/js/1283.cc33caba.chunk.js","mappings":"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","sources":["components/admin/ConfirmationModal.js","components/admin/LoadingSpinner.js","pages/admin/ComplaintManager.js"],"sourcesContent":["import React from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst buttonVariants = {\r\n  hover: { scale: 1.05, boxShadow: '0px 4px 15px rgba(0, 0, 0, 0.2)' },\r\n  tap: { scale: 0.95 },\r\n};\r\n\r\nconst ConfirmationModal = ({ isOpen, onClose, onConfirm, title, message }) => (\r\n  <AnimatePresence>\r\n    {isOpen && (\r\n      <motion.div\r\n        className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\"\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n      >\r\n        <motion.div\r\n          className=\"bg-gray-800/50 backdrop-blur-lg p-6 rounded-xl shadow-xl border border-gray-200/20 max-w-md w-full text-white\"\r\n          initial={{ scale: 0.8, opacity: 0 }}\r\n          animate={{ scale: 1, opacity: 1 }}\r\n          exit={{ scale: 0.8, opacity: 0 }}\r\n        >\r\n          <h3 className=\"text-lg font-semibold mb-4\">{title}</h3>\r\n          <p className=\"text-gray-300 mb-6\">{message}</p>\r\n          <div className=\"flex justify-end gap-4\">\r\n            <motion.button\r\n              onClick={onClose}\r\n              className=\"px-4 py-2 bg-gray-500 rounded-lg hover:bg-gray-600\"\r\n              variants={buttonVariants}\r\n              whileHover=\"hover\"\r\n              whileTap=\"tap\"\r\n            >\r\n              Cancel\r\n            </motion.button>\r\n            <motion.button\r\n              onClick={onConfirm}\r\n              className=\"px-4 py-2 bg-red-500 rounded-lg hover:bg-red-600\"\r\n              variants={buttonVariants}\r\n              whileHover=\"hover\"\r\n              whileTap=\"tap\"\r\n            >\r\n              Confirm\r\n            </motion.button>\r\n          </div>\r\n        </motion.div>\r\n      </motion.div>\r\n    )}\r\n  </AnimatePresence>\r\n);\r\n\r\nConfirmationModal.propTypes = {\r\n  isOpen: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  onConfirm: PropTypes.func.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ConfirmationModal;","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst LoadingSpinner = () => (\r\n  <motion.div\r\n    className=\"flex justify-center items-center py-6\"\r\n    initial={{ opacity: 0 }}\r\n    animate={{ opacity: 1 }}\r\n    transition={{ duration: 0.5 }}\r\n  >\r\n    <div className=\"w-12 h-12 border-4 border-indigo-600 border-t-transparent rounded-full animate-spin\"></div>\r\n  </motion.div>\r\n);\r\n\r\nexport default LoadingSpinner;","import React, { useState, useEffect } from 'react';\r\nimport { ref, onValue, update } from 'firebase/database';\r\nimport { db } from '../../firebase';\r\nimport { toast } from 'react-toastify';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { FiEdit, FiTrash2 } from 'react-icons/fi';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport LoadingSpinner from '../../components/admin/LoadingSpinner';\r\nimport ConfirmationModal from '../../components/admin/ConfirmationModal';\r\n\r\nconst containerVariants = {\r\n  hidden: { opacity: 0 },\r\n  visible: { opacity: 1, transition: { staggerChildren: 0.1 } },\r\n};\r\n\r\nconst itemVariants = {\r\n  hidden: { opacity: 0, y: 20 },\r\n  visible: { opacity: 1, y: 0 },\r\n};\r\n\r\nconst buttonVariants = {\r\n  hover: { scale: 1.05 },\r\n  tap: { scale: 0.95 },\r\n};\r\n\r\nconst EditModal = ({ isOpen, onClose, rowData, onSave }) => {\r\n  const [editedRow, setEditedRow] = useState(rowData || {});\r\n\r\n  useEffect(() => {\r\n    setEditedRow(rowData || {});\r\n  }, [rowData]);\r\n\r\n  const handleSave = () => {\r\n    if (!editedRow.srNo) {\r\n      toast.error('Invalid row data.');\r\n      return;\r\n    }\r\n    onSave(editedRow);\r\n    onClose();\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      {isOpen && (\r\n        <motion.div\r\n          className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\"\r\n          initial={{ opacity: 0 }}\r\n          animate={{ opacity: 1 }}\r\n          exit={{ opacity: 0 }}\r\n        >\r\n          <motion.div\r\n            className=\"bg-gray-800/50 backdrop-blur-lg p-6 rounded-xl shadow-xl border border-gray-200/20 max-w-md w-full text-white\"\r\n            initial={{ scale: 0.8, opacity: 0 }}\r\n            animate={{ scale: 1, opacity: 1 }}\r\n            exit={{ scale: 0.8, opacity: 0 }}\r\n          >\r\n            <h3 className=\"text-lg font-semibold mb-4\">Edit Row {rowData?.srNo}</h3>\r\n            <div className=\"space-y-4\">\r\n              {Object.keys(editedRow).map(key => (\r\n                key !== 'srNo' && (\r\n                  <div key={key}>\r\n                    <label className=\"capitalize text-sm text-gray-400\">{key.replace(/([A-Z])/g, ' $1')}</label>\r\n                    <input\r\n                      type={typeof editedRow[key] === 'number' ? 'number' : 'text'}\r\n                      value={editedRow[key] || ''}\r\n                      onChange={(e) => setEditedRow({ ...editedRow, [key]: e.target.value })}\r\n                      className=\"w-full p-2 rounded-lg bg-white/10 text-white placeholder-white/50 focus:outline-none focus:ring-2 focus:ring-indigo-400\"\r\n                      placeholder={key}\r\n                      disabled={key === 'source' && rowData?.srNo === 'Grand Total'}\r\n                    />\r\n                  </div>\r\n                )\r\n              ))}\r\n            </div>\r\n            <div className=\"flex justify-end gap-4 mt-6\">\r\n              <motion.button onClick={onClose} className=\"px-4 py-2 bg-gray-500 rounded-lg hover:bg-gray-600\" variants={buttonVariants} whileHover=\"hover\">Cancel</motion.button>\r\n              <motion.button onClick={handleSave} className=\"px-4 py-2 bg-green-500 rounded-lg hover:bg-green-600\" variants={buttonVariants} whileHover=\"hover\">Save</motion.button>\r\n            </div>\r\n          </motion.div>\r\n        </motion.div>\r\n      )}\r\n    </AnimatePresence>\r\n  );\r\n};\r\n\r\nEditModal.propTypes = {\r\n  isOpen: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  rowData: PropTypes.object,\r\n  onSave: PropTypes.func.isRequired,\r\n};\r\n\r\nconst ComplaintTable = ({ tableData, handleEdit, handleDelete }) => (\r\n  <motion.div className=\"bg-gray-800/30 rounded-xl shadow-lg border border-gray-200/20 overflow-x-auto\" variants={itemVariants}>\r\n    <table className=\"w-full text-white\">\r\n      <thead className=\"bg-gray-700/50\">\r\n        <tr>\r\n          <th className=\"p-4 text-left text-sm font-semibold\">Sr. No.</th>\r\n          <th className=\"p-4 text-left text-sm font-semibold\">Received from</th>\r\n          <th className=\"p-4 text-left text-sm font-semibold\">Pending last month</th>\r\n          <th className=\"p-4 text-left text-sm font-semibold\">Received</th>\r\n          <th className=\"p-4 text-left text-sm font-semibold\">Resolved</th>\r\n          <th className=\"p-4 text-left text-sm font-semibold\">Pending</th>\r\n          <th className=\"p-4 text-left text-sm font-semibold\">Pending  3 Months</th>\r\n          <th className=\"p-4 text-left text-sm font-semibold\">Avg. Resolution time (days)</th>\r\n          <th className=\"p-4 text-left text-sm font-semibold\">Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {(Array.isArray(tableData) ? tableData : Object.values(tableData || {})).map(row => (\r\n          <motion.tr key={row.srNo} className=\"border-b border-gray-200/20 hover:bg-gray-700/20\" variants={itemVariants}>\r\n            <td className=\"p-4\">{row.srNo}</td>\r\n            <td className=\"p-4\">{row.source || 'N/A'}</td>\r\n            <td className=\"p-4\">{row.pendingLastMonth || 0}</td>\r\n            <td className=\"p-4\">{row.received || 0}</td>\r\n            <td className=\"p-4\">{row.resolved || 0}</td>\r\n            <td className=\"p-4\">{row.pending || 0}</td>\r\n            <td className=\"p-4\">{row.pending3Months || 0}</td>\r\n            <td className=\"p-4\">{row.avgResolutionTime || 0}</td>\r\n            <td className=\"p-4 flex gap-2\">\r\n              <motion.button onClick={() => handleEdit(row)} className=\"text-blue-500 hover:text-blue-700\" variants={buttonVariants} whileHover=\"hover\"><FiEdit size={16} /></motion.button>\r\n              {row.srNo !== 'Grand Total' && (\r\n                <motion.button onClick={() => handleDelete(row.srNo)} className=\"text-red-500 hover:text-red-700\" variants={buttonVariants} whileHover=\"hover\"><FiTrash2 size={16} /></motion.button>\r\n              )}\r\n            </td>\r\n          </motion.tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  </motion.div>\r\n);\r\n\r\nComplaintTable.propTypes = {\r\n  tableData: PropTypes.oneOfType([PropTypes.array, PropTypes.object]).isRequired,\r\n  handleEdit: PropTypes.func.isRequired,\r\n  handleDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nconst ComplaintManager = () => {\r\n  const [tableData, setTableData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\r\n  const [editRowData, setEditRowData] = useState(null);\r\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\r\n  const [itemToDelete, setItemToDelete] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const tableRef = ref(db, 'complaintTableData/data');\r\n    const unsubscribe = onValue(tableRef, (snapshot) => {\r\n      const data = snapshot.val();\r\n      setTableData(data ? (Array.isArray(data) ? data : Object.values(data)) : []);\r\n      setIsLoading(false);\r\n    }, (error) => {\r\n      toast.error('Failed to load complaint data: ' + error.message);\r\n      setIsLoading(false);\r\n    });\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const handleEdit = (row) => {\r\n    setEditRowData(row);\r\n    setIsEditModalOpen(true);\r\n  };\r\n\r\n  const handleSave = async (editedRow) => {\r\n    try {\r\n      const updatedData = tableData.map(row => row.srNo === editedRow.srNo ? editedRow : row);\r\n      await update(ref(db, 'complaintTableData'), { data: updatedData });\r\n      toast.success('Row updated successfully.');\r\n    } catch (error) {\r\n      toast.error('Failed to update row: ' + error.message);\r\n    }\r\n    setIsEditModalOpen(false);\r\n  };\r\n\r\n  const handleDeleteClick = (srNo) => {\r\n    setItemToDelete(srNo);\r\n    setIsDeleteModalOpen(true);\r\n  };\r\n\r\n  const confirmDelete = async () => {\r\n    if (itemToDelete) {\r\n      try {\r\n        const updatedData = tableData.filter(row => row.srNo !== itemToDelete);\r\n        await update(ref(db, 'complaintTableData'), { data: updatedData });\r\n        toast.success('Row deleted successfully.');\r\n      } catch (error) {\r\n        toast.error('Failed to delete row: ' + error.message);\r\n      }\r\n      setIsDeleteModalOpen(false);\r\n      setItemToDelete(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <motion.div variants={containerVariants} initial=\"hidden\" animate=\"visible\">\r\n      <h2 className=\"text-3xl font-bold text-white mb-6\">Complaint Manager</h2>\r\n      {isLoading ? <LoadingSpinner /> : (\r\n        <ComplaintTable tableData={tableData} handleEdit={handleEdit} handleDelete={handleDeleteClick} />\r\n      )}\r\n      <EditModal isOpen={isEditModalOpen} onClose={() => setIsEditModalOpen(false)} rowData={editRowData} onSave={handleSave} />\r\n      <ConfirmationModal isOpen={isDeleteModalOpen} onClose={() => setIsDeleteModalOpen(false)} onConfirm={confirmDelete} title=\"Confirm Deletion\" message=\"Are you sure you want to delete this row?\" />\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default ComplaintManager;\r\n\r\n"],"names":["buttonVariants","hover","scale","boxShadow","tap","_ref","isOpen","onClose","onConfirm","title","message","_jsx","AnimatePresence","children","motion","div","className","initial","opacity","animate","exit","_jsxs","button","onClick","variants","whileHover","whileTap","LoadingSpinner","transition","duration","containerVariants","hidden","visible","staggerChildren","itemVariants","y","EditModal","rowData","onSave","editedRow","setEditedRow","useState","useEffect","srNo","Object","keys","map","key","replace","type","value","onChange","e","target","placeholder","disabled","handleSave","toast","error","ComplaintTable","_ref2","tableData","handleEdit","handleDelete","Array","isArray","values","row","tr","source","pendingLastMonth","received","resolved","pending","pending3Months","avgResolutionTime","FiEdit","size","FiTrash2","ComplaintManager","setTableData","isLoading","setIsLoading","isEditModalOpen","setIsEditModalOpen","editRowData","setEditRowData","isDeleteModalOpen","setIsDeleteModalOpen","itemToDelete","setItemToDelete","tableRef","ref","db","unsubscribe","onValue","snapshot","data","val","async","updatedData","update","success","ConfirmationModal","filter"],"sourceRoot":""}