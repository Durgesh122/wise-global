{"version":3,"file":"static/js/6188.3752052e.chunk.js","mappings":"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","sources":["../node_modules/chartjs-plugin-zoom/dist/chartjs-plugin-zoom.esm.js","../node_modules/framer-motion/dist/es/render/dom/viewport/index.mjs","../node_modules/framer-motion/dist/es/utils/use-in-view.mjs","../node_modules/hammerjs/hammer.js"],"sourcesContent":["/*!\n* chartjs-plugin-zoom v2.2.0\n* https://www.chartjs.org/chartjs-plugin-zoom/2.2.0/\n * (c) 2016-2024 chartjs-plugin-zoom Contributors\n * Released under the MIT License\n */\nimport Hammer from 'hammerjs';\nimport { each, valueOrDefault, almostEquals, callback, sign, getRelativePosition, _isPointInArea } from 'chart.js/helpers';\n\nconst getModifierKey = opts => opts && opts.enabled && opts.modifierKey;\nconst keyPressed = (key, event) => key && event[key + 'Key'];\nconst keyNotPressed = (key, event) => key && !event[key + 'Key'];\nfunction directionEnabled(mode, dir, chart) {\n  if (mode === undefined) {\n    return true;\n  } else if (typeof mode === 'string') {\n    return mode.indexOf(dir) !== -1;\n  } else if (typeof mode === 'function') {\n    return mode({chart}).indexOf(dir) !== -1;\n  }\n  return false;\n}\nfunction directionsEnabled(mode, chart) {\n  if (typeof mode === 'function') {\n    mode = mode({chart});\n  }\n  if (typeof mode === 'string') {\n    return {x: mode.indexOf('x') !== -1, y: mode.indexOf('y') !== -1};\n  }\n  return {x: false, y: false};\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function() {\n    clearTimeout(timeout);\n    timeout = setTimeout(fn, delay);\n    return delay;\n  };\n}\nfunction getScaleUnderPoint({x, y}, chart) {\n  const scales = chart.scales;\n  const scaleIds = Object.keys(scales);\n  for (let i = 0; i < scaleIds.length; i++) {\n    const scale = scales[scaleIds[i]];\n    if (y >= scale.top && y <= scale.bottom && x >= scale.left && x <= scale.right) {\n      return scale;\n    }\n  }\n  return null;\n}\nfunction getEnabledScalesByPoint(options, point, chart) {\n  const {mode = 'xy', scaleMode, overScaleMode} = options || {};\n  const scale = getScaleUnderPoint(point, chart);\n  const enabled = directionsEnabled(mode, chart);\n  const scaleEnabled = directionsEnabled(scaleMode, chart);\n  if (overScaleMode) {\n    const overScaleEnabled = directionsEnabled(overScaleMode, chart);\n    for (const axis of ['x', 'y']) {\n      if (overScaleEnabled[axis]) {\n        scaleEnabled[axis] = enabled[axis];\n        enabled[axis] = false;\n      }\n    }\n  }\n  if (scale && scaleEnabled[scale.axis]) {\n    return [scale];\n  }\n  const enabledScales = [];\n  each(chart.scales, function(scaleItem) {\n    if (enabled[scaleItem.axis]) {\n      enabledScales.push(scaleItem);\n    }\n  });\n  return enabledScales;\n}\n\nconst chartStates = new WeakMap();\nfunction getState(chart) {\n  let state = chartStates.get(chart);\n  if (!state) {\n    state = {\n      originalScaleLimits: {},\n      updatedScaleLimits: {},\n      handlers: {},\n      panDelta: {},\n      dragging: false,\n      panning: false\n    };\n    chartStates.set(chart, state);\n  }\n  return state;\n}\nfunction removeState(chart) {\n  chartStates.delete(chart);\n}\n\nfunction zoomDelta(val, min, range, newRange) {\n  const minPercent = Math.max(0, Math.min(1, (val - min) / range || 0));\n  const maxPercent = 1 - minPercent;\n  return {\n    min: newRange * minPercent,\n    max: newRange * maxPercent\n  };\n}\nfunction getValueAtPoint(scale, point) {\n  const pixel = scale.isHorizontal() ? point.x : point.y;\n  return scale.getValueForPixel(pixel);\n}\nfunction linearZoomDelta(scale, zoom, center) {\n  const range = scale.max - scale.min;\n  const newRange = range * (zoom - 1);\n  const centerValue = getValueAtPoint(scale, center);\n  return zoomDelta(centerValue, scale.min, range, newRange);\n}\nfunction logarithmicZoomRange(scale, zoom, center) {\n  const centerValue = getValueAtPoint(scale, center);\n  if (centerValue === undefined) {\n    return {min: scale.min, max: scale.max};\n  }\n  const logMin = Math.log10(scale.min);\n  const logMax = Math.log10(scale.max);\n  const logCenter = Math.log10(centerValue);\n  const logRange = logMax - logMin;\n  const newLogRange = logRange * (zoom - 1);\n  const delta = zoomDelta(logCenter, logMin, logRange, newLogRange);\n  return {\n    min: Math.pow(10, logMin + delta.min),\n    max: Math.pow(10, logMax - delta.max),\n  };\n}\nfunction getScaleLimits(scale, limits) {\n  return limits && (limits[scale.id] || limits[scale.axis]) || {};\n}\nfunction getLimit(state, scale, scaleLimits, prop, fallback) {\n  let limit = scaleLimits[prop];\n  if (limit === 'original') {\n    const original = state.originalScaleLimits[scale.id][prop];\n    limit = valueOrDefault(original.options, original.scale);\n  }\n  return valueOrDefault(limit, fallback);\n}\nfunction linearRange(scale, pixel0, pixel1) {\n  const v0 = scale.getValueForPixel(pixel0);\n  const v1 = scale.getValueForPixel(pixel1);\n  return {\n    min: Math.min(v0, v1),\n    max: Math.max(v0, v1)\n  };\n}\nfunction fixRange(range, {min, max, minLimit, maxLimit}, originalLimits) {\n  const offset = (range - max + min) / 2;\n  min -= offset;\n  max += offset;\n  const origMin = originalLimits.min.options ?? originalLimits.min.scale;\n  const origMax = originalLimits.max.options ?? originalLimits.max.scale;\n  const epsilon = range / 1e6;\n  if (almostEquals(min, origMin, epsilon)) {\n    min = origMin;\n  }\n  if (almostEquals(max, origMax, epsilon)) {\n    max = origMax;\n  }\n  if (min < minLimit) {\n    min = minLimit;\n    max = Math.min(minLimit + range, maxLimit);\n  } else if (max > maxLimit) {\n    max = maxLimit;\n    min = Math.max(maxLimit - range, minLimit);\n  }\n  return {min, max};\n}\nfunction updateRange(scale, {min, max}, limits, zoom = false) {\n  const state = getState(scale.chart);\n  const {options: scaleOpts} = scale;\n  const scaleLimits = getScaleLimits(scale, limits);\n  const {minRange = 0} = scaleLimits;\n  const minLimit = getLimit(state, scale, scaleLimits, 'min', -Infinity);\n  const maxLimit = getLimit(state, scale, scaleLimits, 'max', Infinity);\n  if (zoom === 'pan' && (min < minLimit || max > maxLimit)) {\n    return true;\n  }\n  const scaleRange = scale.max - scale.min;\n  const range = zoom ? Math.max(max - min, minRange) : scaleRange;\n  if (zoom && range === minRange && scaleRange <= minRange) {\n    return true;\n  }\n  const newRange = fixRange(range, {min, max, minLimit, maxLimit}, state.originalScaleLimits[scale.id]);\n  scaleOpts.min = newRange.min;\n  scaleOpts.max = newRange.max;\n  state.updatedScaleLimits[scale.id] = newRange;\n  return scale.parse(newRange.min) !== scale.min || scale.parse(newRange.max) !== scale.max;\n}\nfunction zoomNumericalScale(scale, zoom, center, limits) {\n  const delta = linearZoomDelta(scale, zoom, center);\n  const newRange = {min: scale.min + delta.min, max: scale.max - delta.max};\n  return updateRange(scale, newRange, limits, true);\n}\nfunction zoomLogarithmicScale(scale, zoom, center, limits) {\n  const newRange = logarithmicZoomRange(scale, zoom, center);\n  return updateRange(scale, newRange, limits, true);\n}\nfunction zoomRectNumericalScale(scale, from, to, limits) {\n  updateRange(scale, linearRange(scale, from, to), limits, true);\n}\nconst integerChange = (v) => v === 0 || isNaN(v) ? 0 : v < 0 ? Math.min(Math.round(v), -1) : Math.max(Math.round(v), 1);\nfunction existCategoryFromMaxZoom(scale) {\n  const labels = scale.getLabels();\n  const maxIndex = labels.length - 1;\n  if (scale.min > 0) {\n    scale.min -= 1;\n  }\n  if (scale.max < maxIndex) {\n    scale.max += 1;\n  }\n}\nfunction zoomCategoryScale(scale, zoom, center, limits) {\n  const delta = linearZoomDelta(scale, zoom, center);\n  if (scale.min === scale.max && zoom < 1) {\n    existCategoryFromMaxZoom(scale);\n  }\n  const newRange = {min: scale.min + integerChange(delta.min), max: scale.max - integerChange(delta.max)};\n  return updateRange(scale, newRange, limits, true);\n}\nfunction scaleLength(scale) {\n  return scale.isHorizontal() ? scale.width : scale.height;\n}\nfunction panCategoryScale(scale, delta, limits) {\n  const labels = scale.getLabels();\n  const lastLabelIndex = labels.length - 1;\n  let {min, max} = scale;\n  const range = Math.max(max - min, 1);\n  const stepDelta = Math.round(scaleLength(scale) / Math.max(range, 10));\n  const stepSize = Math.round(Math.abs(delta / stepDelta));\n  let applied;\n  if (delta < -stepDelta) {\n    max = Math.min(max + stepSize, lastLabelIndex);\n    min = range === 1 ? max : max - range;\n    applied = max === lastLabelIndex;\n  } else if (delta > stepDelta) {\n    min = Math.max(0, min - stepSize);\n    max = range === 1 ? min : min + range;\n    applied = min === 0;\n  }\n  return updateRange(scale, {min, max}, limits) || applied;\n}\nconst OFFSETS = {\n  second: 500,\n  minute: 30 * 1000,\n  hour: 30 * 60 * 1000,\n  day: 12 * 60 * 60 * 1000,\n  week: 3.5 * 24 * 60 * 60 * 1000,\n  month: 15 * 24 * 60 * 60 * 1000,\n  quarter: 60 * 24 * 60 * 60 * 1000,\n  year: 182 * 24 * 60 * 60 * 1000\n};\nfunction panNumericalScale(scale, delta, limits, pan = false) {\n  const {min: prevStart, max: prevEnd, options} = scale;\n  const round = options.time && options.time.round;\n  const offset = OFFSETS[round] || 0;\n  const newMin = scale.getValueForPixel(scale.getPixelForValue(prevStart + offset) - delta);\n  const newMax = scale.getValueForPixel(scale.getPixelForValue(prevEnd + offset) - delta);\n  if (isNaN(newMin) || isNaN(newMax)) {\n    return true;\n  }\n  return updateRange(scale, {min: newMin, max: newMax}, limits, pan ? 'pan' : false);\n}\nfunction panNonLinearScale(scale, delta, limits) {\n  return panNumericalScale(scale, delta, limits, true);\n}\nconst zoomFunctions = {\n  category: zoomCategoryScale,\n  default: zoomNumericalScale,\n  logarithmic: zoomLogarithmicScale,\n};\nconst zoomRectFunctions = {\n  default: zoomRectNumericalScale,\n};\nconst panFunctions = {\n  category: panCategoryScale,\n  default: panNumericalScale,\n  logarithmic: panNonLinearScale,\n  timeseries: panNonLinearScale,\n};\n\nfunction shouldUpdateScaleLimits(scale, originalScaleLimits, updatedScaleLimits) {\n  const {id, options: {min, max}} = scale;\n  if (!originalScaleLimits[id] || !updatedScaleLimits[id]) {\n    return true;\n  }\n  const previous = updatedScaleLimits[id];\n  return previous.min !== min || previous.max !== max;\n}\nfunction removeMissingScales(limits, scales) {\n  each(limits, (opt, key) => {\n    if (!scales[key]) {\n      delete limits[key];\n    }\n  });\n}\nfunction storeOriginalScaleLimits(chart, state) {\n  const {scales} = chart;\n  const {originalScaleLimits, updatedScaleLimits} = state;\n  each(scales, function(scale) {\n    if (shouldUpdateScaleLimits(scale, originalScaleLimits, updatedScaleLimits)) {\n      originalScaleLimits[scale.id] = {\n        min: {scale: scale.min, options: scale.options.min},\n        max: {scale: scale.max, options: scale.options.max},\n      };\n    }\n  });\n  removeMissingScales(originalScaleLimits, scales);\n  removeMissingScales(updatedScaleLimits, scales);\n  return originalScaleLimits;\n}\nfunction doZoom(scale, amount, center, limits) {\n  const fn = zoomFunctions[scale.type] || zoomFunctions.default;\n  callback(fn, [scale, amount, center, limits]);\n}\nfunction doZoomRect(scale, from, to, limits) {\n  const fn = zoomRectFunctions[scale.type] || zoomRectFunctions.default;\n  callback(fn, [scale, from, to, limits]);\n}\nfunction getCenter(chart) {\n  const ca = chart.chartArea;\n  return {\n    x: (ca.left + ca.right) / 2,\n    y: (ca.top + ca.bottom) / 2,\n  };\n}\nfunction zoom(chart, amount, transition = 'none', trigger = 'api') {\n  const {x = 1, y = 1, focalPoint = getCenter(chart)} = typeof amount === 'number' ? {x: amount, y: amount} : amount;\n  const state = getState(chart);\n  const {options: {limits, zoom: zoomOptions}} = state;\n  storeOriginalScaleLimits(chart, state);\n  const xEnabled = x !== 1;\n  const yEnabled = y !== 1;\n  const enabledScales = getEnabledScalesByPoint(zoomOptions, focalPoint, chart);\n  each(enabledScales || chart.scales, function(scale) {\n    if (scale.isHorizontal() && xEnabled) {\n      doZoom(scale, x, focalPoint, limits);\n    } else if (!scale.isHorizontal() && yEnabled) {\n      doZoom(scale, y, focalPoint, limits);\n    }\n  });\n  chart.update(transition);\n  callback(zoomOptions.onZoom, [{chart, trigger}]);\n}\nfunction zoomRect(chart, p0, p1, transition = 'none', trigger = 'api') {\n  const state = getState(chart);\n  const {options: {limits, zoom: zoomOptions}} = state;\n  const {mode = 'xy'} = zoomOptions;\n  storeOriginalScaleLimits(chart, state);\n  const xEnabled = directionEnabled(mode, 'x', chart);\n  const yEnabled = directionEnabled(mode, 'y', chart);\n  each(chart.scales, function(scale) {\n    if (scale.isHorizontal() && xEnabled) {\n      doZoomRect(scale, p0.x, p1.x, limits);\n    } else if (!scale.isHorizontal() && yEnabled) {\n      doZoomRect(scale, p0.y, p1.y, limits);\n    }\n  });\n  chart.update(transition);\n  callback(zoomOptions.onZoom, [{chart, trigger}]);\n}\nfunction zoomScale(chart, scaleId, range, transition = 'none', trigger = 'api') {\n  const state = getState(chart);\n  storeOriginalScaleLimits(chart, state);\n  const scale = chart.scales[scaleId];\n  updateRange(scale, range, undefined, true);\n  chart.update(transition);\n  callback(state.options.zoom?.onZoom, [{chart, trigger}]);\n}\nfunction resetZoom(chart, transition = 'default') {\n  const state = getState(chart);\n  const originalScaleLimits = storeOriginalScaleLimits(chart, state);\n  each(chart.scales, function(scale) {\n    const scaleOptions = scale.options;\n    if (originalScaleLimits[scale.id]) {\n      scaleOptions.min = originalScaleLimits[scale.id].min.options;\n      scaleOptions.max = originalScaleLimits[scale.id].max.options;\n    } else {\n      delete scaleOptions.min;\n      delete scaleOptions.max;\n    }\n    delete state.updatedScaleLimits[scale.id];\n  });\n  chart.update(transition);\n  callback(state.options.zoom.onZoomComplete, [{chart}]);\n}\nfunction getOriginalRange(state, scaleId) {\n  const original = state.originalScaleLimits[scaleId];\n  if (!original) {\n    return;\n  }\n  const {min, max} = original;\n  return valueOrDefault(max.options, max.scale) - valueOrDefault(min.options, min.scale);\n}\nfunction getZoomLevel(chart) {\n  const state = getState(chart);\n  let min = 1;\n  let max = 1;\n  each(chart.scales, function(scale) {\n    const origRange = getOriginalRange(state, scale.id);\n    if (origRange) {\n      const level = Math.round(origRange / (scale.max - scale.min) * 100) / 100;\n      min = Math.min(min, level);\n      max = Math.max(max, level);\n    }\n  });\n  return min < 1 ? min : max;\n}\nfunction panScale(scale, delta, limits, state) {\n  const {panDelta} = state;\n  const storedDelta = panDelta[scale.id] || 0;\n  if (sign(storedDelta) === sign(delta)) {\n    delta += storedDelta;\n  }\n  const fn = panFunctions[scale.type] || panFunctions.default;\n  if (callback(fn, [scale, delta, limits])) {\n    panDelta[scale.id] = 0;\n  } else {\n    panDelta[scale.id] = delta;\n  }\n}\nfunction pan(chart, delta, enabledScales, transition = 'none') {\n  const {x = 0, y = 0} = typeof delta === 'number' ? {x: delta, y: delta} : delta;\n  const state = getState(chart);\n  const {options: {pan: panOptions, limits}} = state;\n  const {onPan} = panOptions || {};\n  storeOriginalScaleLimits(chart, state);\n  const xEnabled = x !== 0;\n  const yEnabled = y !== 0;\n  each(enabledScales || chart.scales, function(scale) {\n    if (scale.isHorizontal() && xEnabled) {\n      panScale(scale, x, limits, state);\n    } else if (!scale.isHorizontal() && yEnabled) {\n      panScale(scale, y, limits, state);\n    }\n  });\n  chart.update(transition);\n  callback(onPan, [{chart}]);\n}\nfunction getInitialScaleBounds(chart) {\n  const state = getState(chart);\n  storeOriginalScaleLimits(chart, state);\n  const scaleBounds = {};\n  for (const scaleId of Object.keys(chart.scales)) {\n    const {min, max} = state.originalScaleLimits[scaleId] || {min: {}, max: {}};\n    scaleBounds[scaleId] = {min: min.scale, max: max.scale};\n  }\n  return scaleBounds;\n}\nfunction getZoomedScaleBounds(chart) {\n  const state = getState(chart);\n  const scaleBounds = {};\n  for (const scaleId of Object.keys(chart.scales)) {\n    scaleBounds[scaleId] = state.updatedScaleLimits[scaleId];\n  }\n  return scaleBounds;\n}\nfunction isZoomedOrPanned(chart) {\n  const scaleBounds = getInitialScaleBounds(chart);\n  for (const scaleId of Object.keys(chart.scales)) {\n    const {min: originalMin, max: originalMax} = scaleBounds[scaleId];\n    if (originalMin !== undefined && chart.scales[scaleId].min !== originalMin) {\n      return true;\n    }\n    if (originalMax !== undefined && chart.scales[scaleId].max !== originalMax) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction isZoomingOrPanning(chart) {\n  const state = getState(chart);\n  return state.panning || state.dragging;\n}\n\nconst clamp = (x, from, to) => Math.min(to, Math.max(from, x));\nfunction removeHandler(chart, type) {\n  const {handlers} = getState(chart);\n  const handler = handlers[type];\n  if (handler && handler.target) {\n    handler.target.removeEventListener(type, handler);\n    delete handlers[type];\n  }\n}\nfunction addHandler(chart, target, type, handler) {\n  const {handlers, options} = getState(chart);\n  const oldHandler = handlers[type];\n  if (oldHandler && oldHandler.target === target) {\n    return;\n  }\n  removeHandler(chart, type);\n  handlers[type] = (event) => handler(chart, event, options);\n  handlers[type].target = target;\n  const passive = type === 'wheel' ? false : undefined;\n  target.addEventListener(type, handlers[type], {passive});\n}\nfunction mouseMove(chart, event) {\n  const state = getState(chart);\n  if (state.dragStart) {\n    state.dragging = true;\n    state.dragEnd = event;\n    chart.update('none');\n  }\n}\nfunction keyDown(chart, event) {\n  const state = getState(chart);\n  if (!state.dragStart || event.key !== 'Escape') {\n    return;\n  }\n  removeHandler(chart, 'keydown');\n  state.dragging = false;\n  state.dragStart = state.dragEnd = null;\n  chart.update('none');\n}\nfunction getPointPosition(event, chart) {\n  if (event.target !== chart.canvas) {\n    const canvasArea = chart.canvas.getBoundingClientRect();\n    return {\n      x: event.clientX - canvasArea.left,\n      y: event.clientY - canvasArea.top,\n    };\n  }\n  return getRelativePosition(event, chart);\n}\nfunction zoomStart(chart, event, zoomOptions) {\n  const {onZoomStart, onZoomRejected} = zoomOptions;\n  if (onZoomStart) {\n    const point = getPointPosition(event, chart);\n    if (callback(onZoomStart, [{chart, event, point}]) === false) {\n      callback(onZoomRejected, [{chart, event}]);\n      return false;\n    }\n  }\n}\nfunction mouseDown(chart, event) {\n  if (chart.legend) {\n    const point = getRelativePosition(event, chart);\n    if (_isPointInArea(point, chart.legend)) {\n      return;\n    }\n  }\n  const state = getState(chart);\n  const {pan: panOptions, zoom: zoomOptions = {}} = state.options;\n  if (\n    event.button !== 0 ||\n    keyPressed(getModifierKey(panOptions), event) ||\n    keyNotPressed(getModifierKey(zoomOptions.drag), event)\n  ) {\n    return callback(zoomOptions.onZoomRejected, [{chart, event}]);\n  }\n  if (zoomStart(chart, event, zoomOptions) === false) {\n    return;\n  }\n  state.dragStart = event;\n  addHandler(chart, chart.canvas.ownerDocument, 'mousemove', mouseMove);\n  addHandler(chart, window.document, 'keydown', keyDown);\n}\nfunction applyAspectRatio({begin, end}, aspectRatio) {\n  let width = end.x - begin.x;\n  let height = end.y - begin.y;\n  const ratio = Math.abs(width / height);\n  if (ratio > aspectRatio) {\n    width = Math.sign(width) * Math.abs(height * aspectRatio);\n  } else if (ratio < aspectRatio) {\n    height = Math.sign(height) * Math.abs(width / aspectRatio);\n  }\n  end.x = begin.x + width;\n  end.y = begin.y + height;\n}\nfunction applyMinMaxProps(rect, chartArea, points, {min, max, prop}) {\n  rect[min] = clamp(Math.min(points.begin[prop], points.end[prop]), chartArea[min], chartArea[max]);\n  rect[max] = clamp(Math.max(points.begin[prop], points.end[prop]), chartArea[min], chartArea[max]);\n}\nfunction getRelativePoints(chart, pointEvents, maintainAspectRatio) {\n  const points = {\n    begin: getPointPosition(pointEvents.dragStart, chart),\n    end: getPointPosition(pointEvents.dragEnd, chart),\n  };\n  if (maintainAspectRatio) {\n    const aspectRatio = chart.chartArea.width / chart.chartArea.height;\n    applyAspectRatio(points, aspectRatio);\n  }\n  return points;\n}\nfunction computeDragRect(chart, mode, pointEvents, maintainAspectRatio) {\n  const xEnabled = directionEnabled(mode, 'x', chart);\n  const yEnabled = directionEnabled(mode, 'y', chart);\n  const {top, left, right, bottom, width: chartWidth, height: chartHeight} = chart.chartArea;\n  const rect = {top, left, right, bottom};\n  const points = getRelativePoints(chart, pointEvents, maintainAspectRatio && xEnabled && yEnabled);\n  if (xEnabled) {\n    applyMinMaxProps(rect, chart.chartArea, points, {min: 'left', max: 'right', prop: 'x'});\n  }\n  if (yEnabled) {\n    applyMinMaxProps(rect, chart.chartArea, points, {min: 'top', max: 'bottom', prop: 'y'});\n  }\n  const width = rect.right - rect.left;\n  const height = rect.bottom - rect.top;\n  return {\n    ...rect,\n    width,\n    height,\n    zoomX: xEnabled && width ? 1 + ((chartWidth - width) / chartWidth) : 1,\n    zoomY: yEnabled && height ? 1 + ((chartHeight - height) / chartHeight) : 1\n  };\n}\nfunction mouseUp(chart, event) {\n  const state = getState(chart);\n  if (!state.dragStart) {\n    return;\n  }\n  removeHandler(chart, 'mousemove');\n  const {mode, onZoomComplete, drag: {threshold = 0, maintainAspectRatio}} = state.options.zoom;\n  const rect = computeDragRect(chart, mode, {dragStart: state.dragStart, dragEnd: event}, maintainAspectRatio);\n  const distanceX = directionEnabled(mode, 'x', chart) ? rect.width : 0;\n  const distanceY = directionEnabled(mode, 'y', chart) ? rect.height : 0;\n  const distance = Math.sqrt(distanceX * distanceX + distanceY * distanceY);\n  state.dragStart = state.dragEnd = null;\n  if (distance <= threshold) {\n    state.dragging = false;\n    chart.update('none');\n    return;\n  }\n  zoomRect(chart, {x: rect.left, y: rect.top}, {x: rect.right, y: rect.bottom}, 'zoom', 'drag');\n  state.dragging = false;\n  state.filterNextClick = true;\n  callback(onZoomComplete, [{chart}]);\n}\nfunction wheelPreconditions(chart, event, zoomOptions) {\n  if (keyNotPressed(getModifierKey(zoomOptions.wheel), event)) {\n    callback(zoomOptions.onZoomRejected, [{chart, event}]);\n    return;\n  }\n  if (zoomStart(chart, event, zoomOptions) === false) {\n    return;\n  }\n  if (event.cancelable) {\n    event.preventDefault();\n  }\n  if (event.deltaY === undefined) {\n    return;\n  }\n  return true;\n}\nfunction wheel(chart, event) {\n  const {handlers: {onZoomComplete}, options: {zoom: zoomOptions}} = getState(chart);\n  if (!wheelPreconditions(chart, event, zoomOptions)) {\n    return;\n  }\n  const rect = event.target.getBoundingClientRect();\n  const speed = zoomOptions.wheel.speed;\n  const percentage = event.deltaY >= 0 ? 2 - 1 / (1 - speed) : 1 + speed;\n  const amount = {\n    x: percentage,\n    y: percentage,\n    focalPoint: {\n      x: event.clientX - rect.left,\n      y: event.clientY - rect.top\n    }\n  };\n  zoom(chart, amount, 'zoom', 'wheel');\n  callback(onZoomComplete, [{chart}]);\n}\nfunction addDebouncedHandler(chart, name, handler, delay) {\n  if (handler) {\n    getState(chart).handlers[name] = debounce(() => callback(handler, [{chart}]), delay);\n  }\n}\nfunction addListeners(chart, options) {\n  const canvas = chart.canvas;\n  const {wheel: wheelOptions, drag: dragOptions, onZoomComplete} = options.zoom;\n  if (wheelOptions.enabled) {\n    addHandler(chart, canvas, 'wheel', wheel);\n    addDebouncedHandler(chart, 'onZoomComplete', onZoomComplete, 250);\n  } else {\n    removeHandler(chart, 'wheel');\n  }\n  if (dragOptions.enabled) {\n    addHandler(chart, canvas, 'mousedown', mouseDown);\n    addHandler(chart, canvas.ownerDocument, 'mouseup', mouseUp);\n  } else {\n    removeHandler(chart, 'mousedown');\n    removeHandler(chart, 'mousemove');\n    removeHandler(chart, 'mouseup');\n    removeHandler(chart, 'keydown');\n  }\n}\nfunction removeListeners(chart) {\n  removeHandler(chart, 'mousedown');\n  removeHandler(chart, 'mousemove');\n  removeHandler(chart, 'mouseup');\n  removeHandler(chart, 'wheel');\n  removeHandler(chart, 'click');\n  removeHandler(chart, 'keydown');\n}\n\nfunction createEnabler(chart, state) {\n  return function(recognizer, event) {\n    const {pan: panOptions, zoom: zoomOptions = {}} = state.options;\n    if (!panOptions || !panOptions.enabled) {\n      return false;\n    }\n    const srcEvent = event && event.srcEvent;\n    if (!srcEvent) {\n      return true;\n    }\n    if (!state.panning && event.pointerType === 'mouse' && (\n      keyNotPressed(getModifierKey(panOptions), srcEvent) || keyPressed(getModifierKey(zoomOptions.drag), srcEvent))\n    ) {\n      callback(panOptions.onPanRejected, [{chart, event}]);\n      return false;\n    }\n    return true;\n  };\n}\nfunction pinchAxes(p0, p1) {\n  const pinchX = Math.abs(p0.clientX - p1.clientX);\n  const pinchY = Math.abs(p0.clientY - p1.clientY);\n  const p = pinchX / pinchY;\n  let x, y;\n  if (p > 0.3 && p < 1.7) {\n    x = y = true;\n  } else if (pinchX > pinchY) {\n    x = true;\n  } else {\n    y = true;\n  }\n  return {x, y};\n}\nfunction handlePinch(chart, state, e) {\n  if (state.scale) {\n    const {center, pointers} = e;\n    const zoomPercent = 1 / state.scale * e.scale;\n    const rect = e.target.getBoundingClientRect();\n    const pinch = pinchAxes(pointers[0], pointers[1]);\n    const mode = state.options.zoom.mode;\n    const amount = {\n      x: pinch.x && directionEnabled(mode, 'x', chart) ? zoomPercent : 1,\n      y: pinch.y && directionEnabled(mode, 'y', chart) ? zoomPercent : 1,\n      focalPoint: {\n        x: center.x - rect.left,\n        y: center.y - rect.top\n      }\n    };\n    zoom(chart, amount, 'zoom', 'pinch');\n    state.scale = e.scale;\n  }\n}\nfunction startPinch(chart, state, event) {\n  if (state.options.zoom.pinch.enabled) {\n    const point = getRelativePosition(event, chart);\n    if (callback(state.options.zoom.onZoomStart, [{chart, event, point}]) === false) {\n      state.scale = null;\n      callback(state.options.zoom.onZoomRejected, [{chart, event}]);\n    } else {\n      state.scale = 1;\n    }\n  }\n}\nfunction endPinch(chart, state, e) {\n  if (state.scale) {\n    handlePinch(chart, state, e);\n    state.scale = null;\n    callback(state.options.zoom.onZoomComplete, [{chart}]);\n  }\n}\nfunction handlePan(chart, state, e) {\n  const delta = state.delta;\n  if (delta) {\n    state.panning = true;\n    pan(chart, {x: e.deltaX - delta.x, y: e.deltaY - delta.y}, state.panScales);\n    state.delta = {x: e.deltaX, y: e.deltaY};\n  }\n}\nfunction startPan(chart, state, event) {\n  const {enabled, onPanStart, onPanRejected} = state.options.pan;\n  if (!enabled) {\n    return;\n  }\n  const rect = event.target.getBoundingClientRect();\n  const point = {\n    x: event.center.x - rect.left,\n    y: event.center.y - rect.top\n  };\n  if (callback(onPanStart, [{chart, event, point}]) === false) {\n    return callback(onPanRejected, [{chart, event}]);\n  }\n  state.panScales = getEnabledScalesByPoint(state.options.pan, point, chart);\n  state.delta = {x: 0, y: 0};\n  handlePan(chart, state, event);\n}\nfunction endPan(chart, state) {\n  state.delta = null;\n  if (state.panning) {\n    state.panning = false;\n    state.filterNextClick = true;\n    callback(state.options.pan.onPanComplete, [{chart}]);\n  }\n}\nconst hammers = new WeakMap();\nfunction startHammer(chart, options) {\n  const state = getState(chart);\n  const canvas = chart.canvas;\n  const {pan: panOptions, zoom: zoomOptions} = options;\n  const mc = new Hammer.Manager(canvas);\n  if (zoomOptions && zoomOptions.pinch.enabled) {\n    mc.add(new Hammer.Pinch());\n    mc.on('pinchstart', (e) => startPinch(chart, state, e));\n    mc.on('pinch', (e) => handlePinch(chart, state, e));\n    mc.on('pinchend', (e) => endPinch(chart, state, e));\n  }\n  if (panOptions && panOptions.enabled) {\n    mc.add(new Hammer.Pan({\n      threshold: panOptions.threshold,\n      enable: createEnabler(chart, state)\n    }));\n    mc.on('panstart', (e) => startPan(chart, state, e));\n    mc.on('panmove', (e) => handlePan(chart, state, e));\n    mc.on('panend', () => endPan(chart, state));\n  }\n  hammers.set(chart, mc);\n}\nfunction stopHammer(chart) {\n  const mc = hammers.get(chart);\n  if (mc) {\n    mc.remove('pinchstart');\n    mc.remove('pinch');\n    mc.remove('pinchend');\n    mc.remove('panstart');\n    mc.remove('pan');\n    mc.remove('panend');\n    mc.destroy();\n    hammers.delete(chart);\n  }\n}\nfunction hammerOptionsChanged(oldOptions, newOptions) {\n  const {pan: oldPan, zoom: oldZoom} = oldOptions;\n  const {pan: newPan, zoom: newZoom} = newOptions;\n  if (oldZoom?.zoom?.pinch?.enabled !== newZoom?.zoom?.pinch?.enabled) {\n    return true;\n  }\n  if (oldPan?.enabled !== newPan?.enabled) {\n    return true;\n  }\n  if (oldPan?.threshold !== newPan?.threshold) {\n    return true;\n  }\n  return false;\n}\n\nvar version = \"2.2.0\";\n\nfunction draw(chart, caller, options) {\n  const dragOptions = options.zoom.drag;\n  const {dragStart, dragEnd} = getState(chart);\n  if (dragOptions.drawTime !== caller || !dragEnd) {\n    return;\n  }\n  const {left, top, width, height} = computeDragRect(chart, options.zoom.mode, {dragStart, dragEnd}, dragOptions.maintainAspectRatio);\n  const ctx = chart.ctx;\n  ctx.save();\n  ctx.beginPath();\n  ctx.fillStyle = dragOptions.backgroundColor || 'rgba(225,225,225,0.3)';\n  ctx.fillRect(left, top, width, height);\n  if (dragOptions.borderWidth > 0) {\n    ctx.lineWidth = dragOptions.borderWidth;\n    ctx.strokeStyle = dragOptions.borderColor || 'rgba(225,225,225)';\n    ctx.strokeRect(left, top, width, height);\n  }\n  ctx.restore();\n}\nvar plugin = {\n  id: 'zoom',\n  version,\n  defaults: {\n    pan: {\n      enabled: false,\n      mode: 'xy',\n      threshold: 10,\n      modifierKey: null,\n    },\n    zoom: {\n      wheel: {\n        enabled: false,\n        speed: 0.1,\n        modifierKey: null\n      },\n      drag: {\n        enabled: false,\n        drawTime: 'beforeDatasetsDraw',\n        modifierKey: null\n      },\n      pinch: {\n        enabled: false\n      },\n      mode: 'xy',\n    }\n  },\n  start: function(chart, _args, options) {\n    const state = getState(chart);\n    state.options = options;\n    if (Object.prototype.hasOwnProperty.call(options.zoom, 'enabled')) {\n      console.warn('The option `zoom.enabled` is no longer supported. Please use `zoom.wheel.enabled`, `zoom.drag.enabled`, or `zoom.pinch.enabled`.');\n    }\n    if (Object.prototype.hasOwnProperty.call(options.zoom, 'overScaleMode')\n      || Object.prototype.hasOwnProperty.call(options.pan, 'overScaleMode')) {\n      console.warn('The option `overScaleMode` is deprecated. Please use `scaleMode` instead (and update `mode` as desired).');\n    }\n    if (Hammer) {\n      startHammer(chart, options);\n    }\n    chart.pan = (delta, panScales, transition) => pan(chart, delta, panScales, transition);\n    chart.zoom = (args, transition) => zoom(chart, args, transition);\n    chart.zoomRect = (p0, p1, transition) => zoomRect(chart, p0, p1, transition);\n    chart.zoomScale = (id, range, transition) => zoomScale(chart, id, range, transition);\n    chart.resetZoom = (transition) => resetZoom(chart, transition);\n    chart.getZoomLevel = () => getZoomLevel(chart);\n    chart.getInitialScaleBounds = () => getInitialScaleBounds(chart);\n    chart.getZoomedScaleBounds = () => getZoomedScaleBounds(chart);\n    chart.isZoomedOrPanned = () => isZoomedOrPanned(chart);\n    chart.isZoomingOrPanning = () => isZoomingOrPanning(chart);\n  },\n  beforeEvent(chart, {event}) {\n    if (isZoomingOrPanning(chart)) {\n      return false;\n    }\n    if (event.type === 'click' || event.type === 'mouseup') {\n      const state = getState(chart);\n      if (state.filterNextClick) {\n        state.filterNextClick = false;\n        return false;\n      }\n    }\n  },\n  beforeUpdate: function(chart, args, options) {\n    const state = getState(chart);\n    const previousOptions = state.options;\n    state.options = options;\n    if (hammerOptionsChanged(previousOptions, options)) {\n      stopHammer(chart);\n      startHammer(chart, options);\n    }\n    addListeners(chart, options);\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    draw(chart, 'beforeDatasetsDraw', options);\n  },\n  afterDatasetsDraw(chart, _args, options) {\n    draw(chart, 'afterDatasetsDraw', options);\n  },\n  beforeDraw(chart, _args, options) {\n    draw(chart, 'beforeDraw', options);\n  },\n  afterDraw(chart, _args, options) {\n    draw(chart, 'afterDraw', options);\n  },\n  stop: function(chart) {\n    removeListeners(chart);\n    if (Hammer) {\n      stopHammer(chart);\n    }\n    removeState(chart);\n  },\n  panFunctions,\n  zoomFunctions,\n  zoomRectFunctions,\n};\n\nexport { plugin as default, pan, resetZoom, zoom, zoomRect, zoomScale };\n","import { resolveElements } from 'motion-dom';\n\nconst thresholds = {\n    some: 0,\n    all: 1,\n};\nfunction inView(elementOrSelector, onStart, { root, margin: rootMargin, amount = \"some\" } = {}) {\n    const elements = resolveElements(elementOrSelector);\n    const activeIntersections = new WeakMap();\n    const onIntersectionChange = (entries) => {\n        entries.forEach((entry) => {\n            const onEnd = activeIntersections.get(entry.target);\n            /**\n             * If there's no change to the intersection, we don't need to\n             * do anything here.\n             */\n            if (entry.isIntersecting === Boolean(onEnd))\n                return;\n            if (entry.isIntersecting) {\n                const newOnEnd = onStart(entry.target, entry);\n                if (typeof newOnEnd === \"function\") {\n                    activeIntersections.set(entry.target, newOnEnd);\n                }\n                else {\n                    observer.unobserve(entry.target);\n                }\n            }\n            else if (typeof onEnd === \"function\") {\n                onEnd(entry);\n                activeIntersections.delete(entry.target);\n            }\n        });\n    };\n    const observer = new IntersectionObserver(onIntersectionChange, {\n        root,\n        rootMargin,\n        threshold: typeof amount === \"number\" ? amount : thresholds[amount],\n    });\n    elements.forEach((element) => observer.observe(element));\n    return () => observer.disconnect();\n}\n\nexport { inView };\n","import { useState, useEffect } from 'react';\nimport { inView } from '../render/dom/viewport/index.mjs';\n\nfunction useInView(ref, { root, margin, amount, once = false, initial = false, } = {}) {\n    const [isInView, setInView] = useState(initial);\n    useEffect(() => {\n        if (!ref.current || (once && isInView))\n            return;\n        const onEnter = () => {\n            setInView(true);\n            return once ? undefined : () => setInView(false);\n        };\n        const options = {\n            root: (root && root.current) || undefined,\n            margin,\n            amount,\n        };\n        return inView(ref.current, onEnter, options);\n    }, [root, ref, margin, once, amount]);\n    return isInView;\n}\n\nexport { useInView };\n","/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n"],"names":["getModifierKey","opts","enabled","modifierKey","keyPressed","key","event","keyNotPressed","directionEnabled","mode","dir","chart","undefined","indexOf","directionsEnabled","x","y","getEnabledScalesByPoint","options","point","scaleMode","overScaleMode","scale","_ref","scales","scaleIds","Object","keys","i","length","top","bottom","left","right","getScaleUnderPoint","scaleEnabled","overScaleEnabled","axis","enabledScales","each","scaleItem","push","chartStates","WeakMap","getState","state","get","originalScaleLimits","updatedScaleLimits","handlers","panDelta","dragging","panning","set","zoomDelta","val","min","range","newRange","minPercent","Math","max","getValueAtPoint","pixel","isHorizontal","getValueForPixel","linearZoomDelta","zoom","center","getLimit","scaleLimits","prop","fallback","limit","original","id","valueOrDefault","updateRange","_ref3","limits","arguments","scaleOpts","getScaleLimits","minRange","minLimit","Infinity","maxLimit","scaleRange","_ref2","originalLimits","offset","origMin","origMax","epsilon","almostEquals","fixRange","parse","integerChange","v","isNaN","round","OFFSETS","second","minute","hour","day","week","month","quarter","year","panNumericalScale","delta","pan","prevStart","prevEnd","time","newMin","getPixelForValue","newMax","panNonLinearScale","zoomFunctions","category","maxIndex","getLabels","existCategoryFromMaxZoom","default","logarithmic","centerValue","logMin","log10","logMax","logRange","pow","logarithmicZoomRange","zoomRectFunctions","from","to","pixel0","pixel1","v0","v1","linearRange","panFunctions","lastLabelIndex","stepDelta","width","height","scaleLength","stepSize","abs","applied","timeseries","removeMissingScales","opt","storeOriginalScaleLimits","previous","shouldUpdateScaleLimits","doZoom","amount","fn","type","callback","doZoomRect","getCenter","ca","chartArea","transition","trigger","focalPoint","zoomOptions","xEnabled","yEnabled","update","onZoom","zoomRect","p0","p1","getZoomLevel","origRange","scaleId","getOriginalRange","level","panScale","storedDelta","sign","panOptions","onPan","getInitialScaleBounds","scaleBounds","isZoomingOrPanning","clamp","removeHandler","handler","target","removeEventListener","addHandler","oldHandler","passive","addEventListener","mouseMove","dragStart","dragEnd","keyDown","getPointPosition","canvas","canvasArea","getBoundingClientRect","clientX","clientY","getRelativePosition","zoomStart","onZoomStart","onZoomRejected","mouseDown","legend","_isPointInArea","button","drag","ownerDocument","window","document","applyMinMaxProps","rect","points","_ref5","begin","end","getRelativePoints","pointEvents","maintainAspectRatio","_ref4","aspectRatio","ratio","applyAspectRatio","computeDragRect","chartWidth","chartHeight","zoomX","zoomY","mouseUp","onZoomComplete","threshold","distanceX","distanceY","distance","sqrt","filterNextClick","wheel","cancelable","preventDefault","deltaY","wheelPreconditions","speed","percentage","addDebouncedHandler","name","delay","timeout","clearTimeout","setTimeout","debounce","createEnabler","recognizer","srcEvent","pointerType","onPanRejected","handlePinch","e","pointers","zoomPercent","pinch","pinchX","pinchY","p","pinchAxes","handlePan","deltaX","panScales","hammers","startHammer","mc","Hammer","add","on","startPinch","endPinch","enable","onPanStart","startPan","onPanComplete","endPan","stopHammer","remove","destroy","delete","draw","caller","dragOptions","drawTime","ctx","save","beginPath","fillStyle","backgroundColor","fillRect","borderWidth","lineWidth","strokeStyle","borderColor","strokeRect","restore","plugin","version","defaults","start","_args","prototype","hasOwnProperty","call","console","warn","args","zoomScale","resetZoom","scaleOptions","getZoomedScaleBounds","isZoomedOrPanned","originalMin","originalMax","beforeEvent","_ref6","beforeUpdate","previousOptions","oldOptions","newOptions","oldPan","oldZoom","newPan","newZoom","hammerOptionsChanged","wheelOptions","addListeners","beforeDatasetsDraw","afterDatasetsDraw","beforeDraw","afterDraw","stop","removeListeners","removeState","thresholds","some","all","useInView","ref","root","margin","once","initial","isInView","setInView","useState","useEffect","current","elementOrSelector","onStart","rootMargin","elements","resolveElements","activeIntersections","observer","IntersectionObserver","entries","forEach","entry","onEnd","isIntersecting","Boolean","newOnEnd","unobserve","element","observe","disconnect","inView","onEnter","exportName","assign","VENDOR_PREFIXES","TEST_ELEMENT","createElement","now","Date","setTimeoutContext","context","bindFn","invokeArrayArg","arg","Array","isArray","obj","iterator","deprecate","method","message","deprecationMessage","Error","stack","replace","log","apply","this","TypeError","output","index","source","nextKey","extend","dest","src","merge","inherit","child","base","properties","childP","baseP","create","constructor","_super","boolOrFn","ifUndefined","val1","val2","addEventListeners","types","splitStr","removeEventListeners","hasParent","node","parent","parentNode","inStr","str","find","trim","split","inArray","findByKey","toArray","slice","uniqueArray","sort","results","values","a","b","prefixed","property","prefix","camelProp","toUpperCase","_uniqueId","getWindowForElement","doc","defaultView","parentWindow","SUPPORT_TOUCH","SUPPORT_POINTER_EVENTS","SUPPORT_ONLY_TOUCH","test","navigator","userAgent","INPUT_TYPE_TOUCH","INPUT_TYPE_MOUSE","DIRECTION_VERTICAL","DIRECTION_UP","PROPS_XY","PROPS_CLIENT_XY","Input","manager","self","inputTarget","domHandler","ev","init","inputHandler","eventType","input","pointersLen","changedPointersLen","changedPointers","isFirst","isFinal","session","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","timeStamp","deltaTime","angle","getAngle","getDistance","offsetDelta","prevDelta","prevInput","computeDeltaXY","offsetDirection","getDirection","overallVelocity","getVelocity","overallVelocityX","overallVelocityY","rotation","getRotation","maxPointers","velocity","velocityX","velocityY","direction","last","lastInterval","computeIntervalInputData","computeInputData","emit","recognize","p2","props","atan2","PI","evEl","evTarget","evWin","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","MOUSE_ELEMENT_EVENTS","MOUSE_WINDOW_EVENTS","MouseInput","pressed","which","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","PointerEventInput","store","pointerEvents","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","toLowerCase","isTouch","storeIndex","pointerId","splice","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","SingleTouchInput","started","normalizeSingleTouches","touches","changed","changedTouches","concat","TOUCH_INPUT_MAP","TOUCH_TARGET_EVENTS","TouchInput","targetIds","getTouches","allTouches","identifier","targetTouches","changedTargetTouches","filter","touch","TouchMouseInput","mouse","primaryTouch","lastTouches","recordTouches","eventData","setLastTouch","lastTouch","lts","isSyntheticEvent","t","dx","dy","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","PREFIXED_TOUCH_ACTION","style","NATIVE_TOUCH_ACTION","TOUCH_ACTION_COMPUTE","TOUCH_ACTION_AUTO","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_NONE","TOUCH_ACTION_PAN_X","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MAP","touchMap","cssSupports","CSS","supports","getTouchActionProps","TouchAction","value","compute","actions","touchAction","recognizers","getTouchAction","hasPanX","hasPanY","cleanTouchActions","join","preventDefaults","prevented","hasNone","isTapPointer","isTapMovement","isTapTouchTime","DIRECTION_LEFT","preventSrc","STATE_FAILED","Recognizer","simultaneous","requireFail","stateStr","directionStr","getRecognizerByNameIfManager","otherRecognizer","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","count","preset","Manager","recognizeWith","dropRecognizeWith","requireFailure","dropRequireFailure","hasRequireFailures","canRecognizeWith","additionalEvent","tryEmit","canEmit","inputDataClone","reset","process","attrTest","optionPointers","isRecognized","isValid","DIRECTION_HORIZONTAL","directionTest","hasMoved","inOut","validPointers","validMovement","validTime","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","inputClass","cssProps","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","oldCssProps","toggleCssProps","item","force","stopped","curRecognizer","existing","events","off","data","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","triggerDomEvent","INPUT_START","INPUT_MOVE","INPUT_END","INPUT_CANCEL","STATE_POSSIBLE","STATE_BEGAN","STATE_CHANGED","STATE_ENDED","STATE_RECOGNIZED","STATE_CANCELLED","DIRECTION_NONE","DIRECTION_RIGHT","DIRECTION_DOWN","DIRECTION_ALL","Tap","Pan","Swipe","Pinch","Rotate","Press","define"],"sourceRoot":""}