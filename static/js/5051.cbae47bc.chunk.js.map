{"version":3,"file":"static/js/5051.cbae47bc.chunk.js","mappings":"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","sources":["pages/Comex.js"],"sourcesContent":["// src/pages/Comex.js\r\nimport React, { useState, useEffect, useMemo } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { Chart as ChartJS, LineElement, PointElement, LinearScale, CategoryScale, Tooltip, Legend } from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { FaSearch, FaPlus, FaTrash } from 'react-icons/fa';\r\n\r\n// Register Chart.js components\r\nChartJS.register(LineElement, PointElement, LinearScale, CategoryScale, Tooltip, Legend);\r\n\r\n// Mock data for Indian stock market (NIFTY 500 inspired)\r\nconst mockStocks = [\r\n  { symbol: 'RELIANCE', name: 'Reliance Industries', price: 3050.25, change: 2.5, sector: 'Oil & Gas', volume: 7500000 },\r\n  { symbol: 'TCS', name: 'Tata Consultancy Services', price: 4200.75, change: -1.2, sector: 'IT', volume: 3200000 },\r\n  { symbol: 'HDFCBANK', name: 'HDFC Bank', price: 1600.50, change: 0.8, sector: 'Banking', volume: 8900000 },\r\n  { symbol: 'INFY', name: 'Infosys', price: 1800.30, change: 1.5, sector: 'IT', volume: 4500000 },\r\n  { symbol: 'ICICIBANK', name: 'ICICI Bank', price: 1200.10, change: -0.5, sector: 'Banking', volume: 6700000 },\r\n  { symbol: 'SBIN', name: 'State Bank of India', price: 850.40, change: 1.8, sector: 'Banking', volume: 12000000 },\r\n  { symbol: 'BHARTIARTL', name: 'Bharti Airtel', price: 1450.65, change: 3.2, sector: 'Telecom', volume: 5600000 },\r\n  { symbol: 'ADANIENT', name: 'Adani Enterprises', price: 3200.90, change: -2.0, sector: 'Conglomerate', volume: 2300000 },\r\n  { symbol: 'MARUTI', name: 'Maruti Suzuki', price: 12476.00, change: 0.9, sector: 'Automotive', volume: 890000 },\r\n  { symbol: 'ULTRACEMCO', name: 'UltraTech Cement', price: 12495.00, change: 1.1, sector: 'Cement', volume: 450000 },\r\n  // Add more mock stocks to simulate NIFTY 500\r\n  ...Array.from({ length: 20 }, (_, i) => ({\r\n    symbol: `STOCK${i + 1}`,\r\n    name: `Stock ${i + 1} India`,\r\n    price: Math.random() * 5000 + 100,\r\n    change: (Math.random() * 10 - 5).toFixed(2),\r\n    sector: ['IT', 'Banking', 'Pharma', 'Automotive', 'FMCG'][Math.floor(Math.random() * 5)],\r\n    volume: Math.floor(Math.random() * 10000000),\r\n  })),\r\n];\r\n\r\n// Mock historical data for charts\r\nconst generateHistoricalData = (basePrice) => {\r\n  const labels = Array.from({ length: 30 }, (_, i) => `Day ${i + 1}`);\r\n  const prices = labels.map(() => basePrice * (1 + (Math.random() - 0.5) * 0.1));\r\n  return { labels, prices };\r\n};\r\n\r\nconst Comex = () => {\r\n  // State management\r\n  const [stocks, setStocks] = useState(mockStocks);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedSector, setSelectedSector] = useState('All');\r\n  const [watchlist, setWatchlist] = useState([]);\r\n  const [selectedStock, setSelectedStock] = useState(null);\r\n  const [sortConfig, setSortConfig] = useState({ key: 'price', direction: 'desc' });\r\n\r\n  // Simulate real-time price updates\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setStocks((prevStocks) =>\r\n        prevStocks.map((stock) => ({\r\n          ...stock,\r\n          price: stock.price * (1 + (Math.random() - 0.5) * 0.02),\r\n          change: (Math.random() * 5 - 2.5).toFixed(2),\r\n        }))\r\n      );\r\n    }, 5000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Filter stocks based on search and sector\r\n  const filteredStocks = useMemo(() => {\r\n    let result = stocks.filter(\r\n      (stock) =>\r\n        stock.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n        stock.symbol.toLowerCase().includes(searchTerm.toLowerCase())\r\n    );\r\n\r\n    if (selectedSector !== 'All') {\r\n      result = result.filter((stock) => stock.sector === selectedSector);\r\n    }\r\n\r\n    // Sort stocks\r\n    result.sort((a, b) => {\r\n      if (sortConfig.key === 'price' || sortConfig.key === 'change' || sortConfig.key === 'volume') {\r\n        const aValue = parseFloat(a[sortConfig.key]);\r\n        const bValue = parseFloat(b[sortConfig.key]);\r\n        return sortConfig.direction === 'asc' ? aValue - bValue : bValue - aValue;\r\n      }\r\n      return sortConfig.direction === 'asc'\r\n        ? a[sortConfig.key].localeCompare(b[sortConfig.key])\r\n        : b[sortConfig.key].localeCompare(a[sortConfig.key]);\r\n    });\r\n\r\n    return result;\r\n  }, [stocks, searchTerm, selectedSector, sortConfig]);\r\n\r\n  // Handle sorting\r\n  const handleSort = (key) => {\r\n    setSortConfig((prev) => ({\r\n      key,\r\n      direction: prev.key === key && prev.direction === 'asc' ? 'desc' : 'asc',\r\n    }));\r\n  };\r\n\r\n  // Add/remove from watchlist\r\n  const toggleWatchlist = (stock) => {\r\n    setWatchlist((prev) =>\r\n      prev.some((item) => item.symbol === stock.symbol)\r\n        ? prev.filter((item) => item.symbol !== stock.symbol)\r\n        : [...prev, stock]\r\n    );\r\n  };\r\n\r\n  // Chart data for selected stock\r\n  const chartData = selectedStock\r\n    ? {\r\n        labels: generateHistoricalData(selectedStock.price).labels,\r\n        datasets: [\r\n          {\r\n            label: `${selectedStock.name} Price`,\r\n            data: generateHistoricalData(selectedStock.price).prices,\r\n            borderColor: 'rgba(75, 192, 192, 1)',\r\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n            fill: true,\r\n          },\r\n        ],\r\n      }\r\n    : null;\r\n\r\n  // Chart options\r\n  const chartOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: { position: 'top' },\r\n      tooltip: { enabled: true },\r\n    },\r\n    scales: {\r\n      x: { title: { display: true, text: 'Date' } },\r\n      y: { title: { display: true, text: 'Price (INR)' } },\r\n    },\r\n  };\r\n\r\n  // Sector options for filter\r\n  const sectors = ['All', ...new Set(mockStocks.map((stock) => stock.sector))];\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"min-h-screen bg-transparent p-8\"\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      transition={{ duration: 0.5 }}\r\n    >\r\n      <div className=\"max-w-7xl mx-auto\">\r\n        <motion.h1\r\n          className=\"text-3xl font-bold text-center text-white mb-8\"\r\n          initial={{ y: -20 }}\r\n          animate={{ y: 0 }}\r\n          transition={{ duration: 0.3 }}\r\n        >\r\n          Indian Stock Market - Comex Dashboard\r\n        </motion.h1>\r\n\r\n        {/* Search and Filter Section */}\r\n        <motion.div\r\n          className=\"flex flex-col md:flex-row gap-4 mb-8\"\r\n          initial={{ scale: 0.95 }}\r\n          animate={{ scale: 1 }}\r\n          transition={{ duration: 0.3 }}\r\n        >\r\n          <div className=\"relative flex-1\">\r\n            <FaSearch className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search stocks by name or symbol...\"\r\n              className=\"w-full pl-10 pr-4 py-2 bg-gray-800 bg-opacity-50 text-white rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n            />\r\n          </div>\r\n          <select\r\n            className=\"px-4 py-2 bg-gray-800 bg-opacity-50 text-white rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            value={selectedSector}\r\n            onChange={(e) => setSelectedSector(e.target.value)}\r\n          >\r\n            {sectors.map((sector) => (\r\n              <option key={sector} value={sector}>\r\n                {sector}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </motion.div>\r\n\r\n        {/* Stock List and Watchlist */}\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n          {/* Stock List */}\r\n          <motion.div\r\n            className=\"lg:col-span-2 bg-gray-900 bg-opacity-50 rounded-lg p-6\"\r\n            initial={{ x: -20 }}\r\n            animate={{ x: 0 }}\r\n            transition={{ duration: 0.3 }}\r\n          >\r\n            <h2 className=\"text-xl font-semibold text-white mb-4\">Stock List</h2>\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"w-full text-white\">\r\n                <thead>\r\n                  <tr className=\"border-b border-gray-700\">\r\n                    <th className=\"p-3 cursor-pointer\" onClick={() => handleSort('symbol')}>\r\n                      Symbol {sortConfig.key === 'symbol' && (sortConfig.direction === 'asc' ? '↑' : '↓')}\r\n                    </th>\r\n                    <th className=\"p-3 cursor-pointer\" onClick={() => handleSort('name')}>\r\n                      Name {sortConfig.key === 'name' && (sortConfig.direction === 'asc' ? '↑' : '↓')}\r\n                    </th>\r\n                    <th className=\"p-3 cursor-pointer\" onClick={() => handleSort('price')}>\r\n                      Price (INR) {sortConfig.key === 'price' && (sortConfig.direction === 'asc' ? '↑' : '↓')}\r\n                    </th>\r\n                    <th className=\"p-3 cursor-pointer\" onClick={() => handleSort('change')}>\r\n                      Change (%) {sortConfig.key === 'change' && (sortConfig.direction === 'asc' ? '↑' : '↓')}\r\n                    </th>\r\n                    <th className=\"p-3 cursor-pointer\" onClick={() => handleSort('sector')}>\r\n                      Sector {sortConfig.key === 'sector' && (sortConfig.direction === 'asc' ? '↑' : '↓')}\r\n                    </th>\r\n                    <th className=\"p-3 cursor-pointer\" onClick={() => handleSort('volume')}>\r\n                      Volume {sortConfig.key === 'volume' && (sortConfig.direction === 'asc' ? '↑' : '↓')}\r\n                    </th>\r\n                    <th className=\"p-3\">Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <AnimatePresence>\r\n                    {filteredStocks.map((stock) => (\r\n                      <motion.tr\r\n                        key={stock.symbol}\r\n                        className=\"border-b border-gray-800 hover:bg-gray-700 cursor-pointer\"\r\n                        initial={{ opacity: 0, y: 10 }}\r\n                        animate={{ opacity: 1, y: 0 }}\r\n                        exit={{ opacity: 0, y: -10 }}\r\n                        transition={{ duration: 0.2 }}\r\n                        onClick={() => setSelectedStock(stock)}\r\n                      >\r\n                        <td className=\"p-3\">{stock.symbol}</td>\r\n                        <td className=\"p-3\">{stock.name}</td>\r\n                        <td className=\"p-3\">₹{stock.price.toFixed(2)}</td>\r\n                        <td className={`p-3 ${stock.change >= 0 ? 'text-green-500' : 'text-red-500'}`}>\r\n                          {stock.change}%\r\n                        </td>\r\n                        <td className=\"p-3\">{stock.sector}</td>\r\n                        <td className=\"p-3\">{stock.volume.toLocaleString()}</td>\r\n                        <td className=\"p-3\">\r\n                          <button\r\n                            onClick={(e) => {\r\n                              e.stopPropagation();\r\n                              toggleWatchlist(stock);\r\n                            }}\r\n                            className=\"text-blue-500 hover:text-blue-300\"\r\n                          >\r\n                            {watchlist.some((item) => item.symbol === stock.symbol) ? (\r\n                              <FaTrash />\r\n                            ) : (\r\n                              <FaPlus />\r\n                            )}\r\n                          </button>\r\n                        </td>\r\n                      </motion.tr>\r\n                    ))}\r\n                  </AnimatePresence>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </motion.div>\r\n\r\n          {/* Watchlist */}\r\n          <motion.div\r\n            className=\"bg-gray-900 bg-opacity-50 rounded-lg p-6\"\r\n            initial={{ x: 20 }}\r\n            animate={{ x: 0 }}\r\n            transition={{ duration: 0.3 }}\r\n          >\r\n            <h2 className=\"text-xl font-semibold text-white mb-4\">Watchlist</h2>\r\n            {watchlist.length === 0 ? (\r\n              <p className=\"text-gray-400\">Your watchlist is empty.</p>\r\n            ) : (\r\n              <ul className=\"space-y-2\">\r\n                <AnimatePresence>\r\n                  {watchlist.map((stock) => (\r\n                    <motion.li\r\n                      key={stock.symbol}\r\n                      className=\"flex justify-between items-center p-2 bg-gray-800 bg-opacity-50 rounded\"\r\n                      initial={{ opacity: 0, x: 10 }}\r\n                      animate={{ opacity: 1, x: 0 }}\r\n                      exit={{ opacity: 0, x: -10 }}\r\n                      transition={{ duration: 0.2 }}\r\n                    >\r\n                      <span>\r\n                        {stock.symbol} - ₹{stock.price.toFixed(2)} (\r\n                        <span className={stock.change >= 0 ? 'text-green-500' : 'text-red-500'}>\r\n                          {stock.change}%\r\n                        </span>\r\n                        )\r\n                      </span>\r\n                      <button\r\n                        onClick={() => toggleWatchlist(stock)}\r\n                        className=\"text-red-500 hover:text-red-300\"\r\n                      >\r\n                        <FaTrash />\r\n                      </button>\r\n                    </motion.li>\r\n                  ))}\r\n                </AnimatePresence>\r\n              </ul>\r\n            )}\r\n          </motion.div>\r\n        </div>\r\n\r\n        {/* Stock Chart */}\r\n        {selectedStock && (\r\n          <motion.div\r\n            className=\"mt-8 bg-gray-900 bg-opacity-50 rounded-lg p-6\"\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.3 }}\r\n          >\r\n            <h2 className=\"text-xl font-semibold text-white mb-4\">\r\n              Price Trend: {selectedStock.name} ({selectedStock.symbol})\r\n            </h2>\r\n            <Line data={chartData} options={chartOptions} />\r\n          </motion.div>\r\n        )}\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Comex;"],"names":["ChartJS","register","LineElement","PointElement","LinearScale","CategoryScale","Tooltip","Legend","mockStocks","symbol","name","price","change","sector","volume","Array","from","length","_","i","Math","random","toFixed","floor","generateHistoricalData","basePrice","labels","prices","map","Comex","stocks","setStocks","useState","searchTerm","setSearchTerm","selectedSector","setSelectedSector","watchlist","setWatchlist","selectedStock","setSelectedStock","sortConfig","setSortConfig","key","direction","useEffect","interval","setInterval","prevStocks","stock","clearInterval","filteredStocks","useMemo","result","filter","toLowerCase","includes","sort","a","b","aValue","parseFloat","bValue","localeCompare","handleSort","prev","toggleWatchlist","some","item","chartData","datasets","label","data","borderColor","backgroundColor","fill","sectors","Set","_jsx","motion","div","className","initial","opacity","animate","transition","duration","children","_jsxs","h1","y","scale","FaSearch","type","placeholder","value","onChange","e","target","x","onClick","AnimatePresence","tr","exit","toLocaleString","stopPropagation","FaTrash","FaPlus","li","Line","options","responsive","plugins","legend","position","tooltip","enabled","scales","title","display","text"],"sourceRoot":""}